[{"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/index.js":"1","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/App.js":"2","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/history.js":"3","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/LoginPage.js":"4","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListOfEmployee.js":"5","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HomePage.js":"6","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreateEmployee.js":"7","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreatePersonalDetails.js":"8","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditEmployee.js":"9","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EmployeeDetails.js":"10","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HR_Page.js":"11","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListofPersonalDetails.js":"12","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/PersonalDetails.js":"13","/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditPersonalDetails.js":"14","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/index.js":"15","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/App.js":"16","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/history.js":"17","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListOfEmployee.js":"18","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HomePage.js":"19","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListofPersonalDetails.js":"20","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/PersonalDetails.js":"21","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/LoginPage.js":"22","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HR_Page.js":"23","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreateEmployee.js":"24","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditEmployee.js":"25","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EmployeeDetails.js":"26","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreatePersonalDetails.js":"27","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditPersonalDetails.js":"28","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/Accounting.js":"29","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/index.js":"30","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/App.js":"31","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/history.js":"32","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/LoginPage.js":"33","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/HomePage.js":"34","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/ListOfEmployee.js":"35","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/CreateEmployee.js":"36","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/EditEmployee.js":"37","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/EmployeeDetails.js":"38","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/ListofPersonalDetails.js":"39","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/HR_Page.js":"40","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/CreatePersonalDetails.js":"41","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/PersonalDetails.js":"42","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/EditPersonalDetails.js":"43","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/Accounting.js":"44","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/CreateSystemDetail.js":"45","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/SystemDetails.js":"46","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/EditSystemDetails.js":"47"},{"size":712,"mtime":1609733795367,"results":"48","hashOfConfig":"49"},{"size":1701,"mtime":1613328640836,"results":"50","hashOfConfig":"49"},{"size":84,"mtime":1607967946513,"results":"51","hashOfConfig":"49"},{"size":1912,"mtime":1611404068305,"results":"52","hashOfConfig":"49"},{"size":5507,"mtime":1613327142384,"results":"53","hashOfConfig":"49"},{"size":2383,"mtime":1612261702400,"results":"54","hashOfConfig":"49"},{"size":6707,"mtime":1613326704832,"results":"55","hashOfConfig":"49"},{"size":5942,"mtime":1612196881818,"results":"56","hashOfConfig":"49"},{"size":7120,"mtime":1613326639630,"results":"57","hashOfConfig":"49"},{"size":4711,"mtime":1613328470136,"results":"58","hashOfConfig":"49"},{"size":2306,"mtime":1613326486594,"results":"59","hashOfConfig":"49"},{"size":5112,"mtime":1613327045754,"results":"60","hashOfConfig":"49"},{"size":4601,"mtime":1613328185565,"results":"61","hashOfConfig":"49"},{"size":6588,"mtime":1613326628795,"results":"62","hashOfConfig":"49"},{"size":712,"mtime":1609733795367,"results":"63","hashOfConfig":"64"},{"size":1940,"mtime":1614089841257,"results":"65","hashOfConfig":"64"},{"size":84,"mtime":1607967946513,"results":"66","hashOfConfig":"64"},{"size":5507,"mtime":1613327142384,"results":"67","hashOfConfig":"64"},{"size":2474,"mtime":1614087487924,"results":"68","hashOfConfig":"64"},{"size":5112,"mtime":1613327045754,"results":"69","hashOfConfig":"64"},{"size":4601,"mtime":1613328185565,"results":"70","hashOfConfig":"64"},{"size":1912,"mtime":1611404068305,"results":"71","hashOfConfig":"64"},{"size":2306,"mtime":1613326486594,"results":"72","hashOfConfig":"64"},{"size":6707,"mtime":1613326704832,"results":"73","hashOfConfig":"64"},{"size":7120,"mtime":1613326639630,"results":"74","hashOfConfig":"64"},{"size":4711,"mtime":1613328470136,"results":"75","hashOfConfig":"64"},{"size":5942,"mtime":1612196881818,"results":"76","hashOfConfig":"64"},{"size":6588,"mtime":1613326628795,"results":"77","hashOfConfig":"64"},{"size":2603,"mtime":1614089904426,"results":"78","hashOfConfig":"64"},{"size":712,"mtime":1614688225111,"results":"79","hashOfConfig":"80"},{"size":2208,"mtime":1614690636973,"results":"81","hashOfConfig":"80"},{"size":84,"mtime":1614688225111,"results":"82","hashOfConfig":"80"},{"size":1901,"mtime":1614688225111,"results":"83","hashOfConfig":"80"},{"size":2283,"mtime":1614690646380,"results":"84","hashOfConfig":"80"},{"size":5507,"mtime":1614688225111,"results":"85","hashOfConfig":"80"},{"size":6707,"mtime":1614688225107,"results":"86","hashOfConfig":"80"},{"size":7120,"mtime":1614688225107,"results":"87","hashOfConfig":"80"},{"size":4711,"mtime":1614688225107,"results":"88","hashOfConfig":"80"},{"size":5109,"mtime":1614688225111,"results":"89","hashOfConfig":"80"},{"size":2299,"mtime":1614688225107,"results":"90","hashOfConfig":"80"},{"size":5942,"mtime":1614688225107,"results":"91","hashOfConfig":"80"},{"size":4599,"mtime":1614688225111,"results":"92","hashOfConfig":"80"},{"size":6563,"mtime":1614688225107,"results":"93","hashOfConfig":"80"},{"size":4936,"mtime":1614690394828,"results":"94","hashOfConfig":"80"},{"size":5339,"mtime":1614690474443,"results":"95","hashOfConfig":"80"},{"size":4342,"mtime":1614688685478,"results":"96","hashOfConfig":"80"},{"size":5773,"mtime":1614688628696,"results":"97","hashOfConfig":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3pwomj",{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"xj1n5e",{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"128"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"128"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"128"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"128"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"128"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"128"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"159","usedDeprecatedRules":"128"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"128"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"128"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"sap3g0",{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"170"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"170"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"170"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"170"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"170"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"159","usedDeprecatedRules":"170"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"170"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"170"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"170"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"170"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"170"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"170"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"170"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"170"},"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/index.js",[],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/App.js",["216"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/history.js",[],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/LoginPage.js",[],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListOfEmployee.js",["217","218","219","220","221","222","223","224"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HomePage.js",["225","226","227","228","229","230","231","232"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreateEmployee.js",["233","234","235","236"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreatePersonalDetails.js",["237","238","239","240"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditEmployee.js",["241","242","243"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EmployeeDetails.js",["244","245","246","247","248","249","250","251","252","253"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HR_Page.js",["254","255","256","257","258","259","260"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListofPersonalDetails.js",["261","262","263"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/PersonalDetails.js",["264","265","266","267","268","269","270","271","272"],"/home/preethibandari/Desktop/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditPersonalDetails.js",["273","274","275"],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/index.js",[],["276","277"],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/App.js",["278"],"import React from 'react';\nimport { Route,Router, Switch } from \"react-router-dom\";\nimport history from './history';\nimport { LoginPage } from \"./component/LoginPage\";\nimport { HomePage } from \"./component/HomePage\";\nimport { ListOfEmployee } from \"./component/ListOfEmployee\";\nimport { CreateEmployee } from \"./component/CreateEmployee\";\nimport { EditEmployee } from \"./component/EditEmployee\";\nimport { EmployeeDetails } from \"./component/EmployeeDetails\";\nimport { HR } from \"./component/HR_Page\";\nimport { PersonalDetails } from './component/ListofPersonalDetails';\nimport { Create_PersonalDetails } from \"./component/CreatePersonalDetails\";\nimport { Personal_Details } from \"./component/PersonalDetails\"\nimport {EditPersonalDetails} from \"./component/EditPersonalDetails\";\nimport {InventoryPage} from \"./component/Accounting\";\nimport {  Create} from \"./component/CreateSystemDetail\";\nimport './App.css'\nimport { from } from '@apollo/client';\nfunction App() {\n  return (\n\n    <Router history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={LoginPage} />\n        <Route exact path=\"/home\" component={HomePage} />\n        <Route exact path=\"/list\" component={ListOfEmployee} />\n        <Route exact path=\"/adding\" component={CreateEmployee} />\n        <Route exact path=\"/edit/:id/\" component={EditEmployee} />\n        <Route exact path=\"/display/:id/\" component={EmployeeDetails} />\n        <Route exact path=\"/hr\" component={HR} />\n        <Route exact path=\"/personal\" component={PersonalDetails} />\n        <Route exact path=\"/createpresonal\" component={Create_PersonalDetails} />\n        <Route exact path=\"/pd/:id/\" component={Personal_Details} />\n        <Route exact path=\"/editpersonal/:id\" component={EditPersonalDetails}/>\n        <Route exact path=\"/inventorypage\" component={InventoryPage}/>\n        <Route exact path=\"/create\" component={Create}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/history.js",[],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListOfEmployee.js",["279","280","281","282","283","284","285","286"],"import React, { Component, Fragment, useState, } from 'react';\nimport Styled from '@emotion/styled';\nimport { Link, useParams, useHistory } from 'react-router-dom'\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash, faSearch } from '@fortawesome/free-solid-svg-icons'\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\ntext-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst Actionbutton = Styled.button`\nheight:15px;\nwidth:15px;\ndisplay:inline-block;\nbackground-color:rgba(255,255,255,0.7);\nborder:1px solid gray;\n`;\nconst IdButton = Styled.button`\nborder:none;\noutline:none;\n    `;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover = Styled.a`\n&:hover {\n    color:blue;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:57%;\nheight:25px;\nfont-size:15px;\n`;\n\n\nexport const ListOfEmployee = () => {\n\n    const { id } = useParams();\n\n    const Show = gql`\n{\n    employeeList{\n    id\n    name\n    code\n    email\n    role\n    department\n    joinedDate\n    mobileNo\n    }\n  }`;\n\n    const [empId, setEmpId] = useState({ 'idToDelete': \"\" });\n\n    const DELETE_Employee = gql`\n    mutation DeleteEmployee($id: String!){\n    deleteEmployee(id: $id){\n    respCode,\n    respMessage \n  }\n}\n`;\n\n    const { loading, error, data } = useQuery(Show);\n    const [deleteMutation] = useMutation(DELETE_Employee);\n\n    const handleDelete = (deleteId) => {\n        if (window.confirm(\"Do you really want to leave?\")) {\n            setEmpId({ 'idToDelete': deleteId });\n            console.log(\"handleDelte\", deleteId, empId);\n            deleteMutation({ variables: { id: deleteId } });\n\n        }\n        else {\n\n        }\n    };\n\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                List of Employee\n                <Input type=\"text\" placeholder=\"Search\" ></Input>\n                <Button >\n                    <LinkTag to={\"/adding\"}>Add Employee</LinkTag>\n                </Button>\n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n                    <TableRow>\n                        <TableHeading>ID</TableHeading>\n                        <TableHeading>Name</TableHeading>\n                        <TableHeading>Email</TableHeading>\n                        <TableHeading>Role</TableHeading>\n                        <TableHeading>Department</TableHeading>\n                        <TableHeading>JoiningDate</TableHeading>\n                        <TableHeading>MobileNumber</TableHeading>\n                        <TableHeading>Edit</TableHeading>\n                        <TableHeading>Delete</TableHeading>\n                    </TableRow>\n\n                    {data.employeeList.map((employee, id) => (\n                        <TableRow>\n                            <a href=\"\">\n                                <LinkTag to={`/display/${employee.id}`}>\n                                    <Hover>\n                                        <TableData key={id}>{employee.code}</TableData>\n                                    </Hover>\n                                </LinkTag>\n                            </a>\n                            <TableData>{employee.name}</TableData>\n                            <TableData>{employee.email}</TableData>\n                            <TableData>{employee.role}</TableData>\n                            <TableData>{employee.department}</TableData>\n                            <TableData>{employee.joinedDate}</TableData>\n                            <TableData>{employee.mobileNo}</TableData>\n\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <LinkTag to={`/edit/${employee.id}`}>\n                                    <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                                </LinkTag>\n                            </TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <Button onClick={() => handleDelete(employee.id)} >\n                                    <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\n                                </Button>\n                            </TableData>\n                        </TableRow>\n                    )\n                    )}\n                </Table>\n            </Container>\n        </Fragment>\n    )\n}","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HomePage.js",["287","288","289","290","291","292","293","294"],"import React, { Component, Fragment } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport './images/mobile_black.png';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\ncolor: ${(props) => props.color};\nposition: sticky;\ntop: 0px;\nfont-size: 20px;\npadding: 8px;\ntext-align:${(props) => props.text};\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom:-5px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 3px solid #ddd;\n`;\nconst TableData = Styled.td`\nborder: 3px solid #ddd;\nheight:30px;\nfont-size:20px;\nfont-weight:bold;\npadding:40px;\nvertical-align:bottom;\ntext-align:left;\n&:hover {background-color: grey;}\n`;\nconst TableRow = Styled.tr`\nborder: 3px solid #ddd;\n &:nth-child(even){background-color: #F2F2F2;}\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\n    // window.onpopstate= function()\n    // {\n    //     alert(\"Are you sure want to leave this page\");\n    // }\n    \nexport const HomePage = () => {\n\n    return (\n        \n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\" text=\"center\">\n                Home page\n                    </Navbar>\n            <Table>\n                <TableRow>\n                    <TableRow><TableData>\n                    <LinkTag to={\"/hr\"} >HR </LinkTag></TableData></TableRow>\n                    <TableRow><TableData> \n                        <LinkTag to={\"/inventorypage\"}> ACCOUNTING</LinkTag>\n                       </TableData></TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to={\"/list\"} >\n                            EMOPLOYEE DIRECTORY\n                             </LinkTag>\n                    </TableData></TableRow>\n                    <TableRow><TableData> CLIENT</TableData></TableRow>\n                    \n                    <TableRow ><TableData>\n                \n                        DOCUMENTATION\n                        </TableData></TableRow>\n                             \n                </TableRow>\n            </Table>\n        </Fragment>\n    )\n}","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListofPersonalDetails.js",["295","296","297"],"import { React, Fragment, useState } from \"react\";\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { useQuery, gql, useMutation } from '@apollo/client';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\ntext-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover = Styled.a`\n&:hover {\n    color:blue;\n`;\nexport const PersonalDetails = () => {\n    const { id } = useParams();\n    const [empId, setEmpId] = useState({ 'idToDelete': \"\" });\n    const Show = gql`\n   query{ \n    personalList{\n        id\n        name\n        code\n        email\n        role\n        pan_No\n        account_No\n        ifsc_code\n    }\n }`;\n    const DELETE_PD = gql`\n mutation DeletePD($id: String!){\n    deletePersonalDetails(id: $id){\n respCode,\n respMessage \n}\n}\n`;\n\n    const { loading, error, data } = useQuery(Show);\n    const [deleteMutation] = useMutation(DELETE_PD);\n    const handleDelete = (deleteId) => {\n        if (window.confirm(\"Do you really want to leave?\")) {\n            setEmpId({ 'idToDelete': deleteId });\n            console.log(\"handleDelte\", deleteId, empId);\n            deleteMutation({ variables: { id: deleteId } });\n\n        }\n        else {\n\n        }\n    };\n\n\n    console.log(data);\n    if (loading) return <p>loading</p>;\n    if (error) return <p>Error</p>;\n\n    return (\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">Personal Details\n<Button >\n                    <LinkTag to={\"/createpresonal\"}>\n                        <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>    ADD</LinkTag>\n                </Button>\n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n                    <TableRow>\n                        <TableHeading>ID</TableHeading>\n                        <TableHeading>Name</TableHeading>\n                        <TableHeading>Email</TableHeading>\n                        <TableHeading>Role</TableHeading>\n                        <TableHeading>PAN</TableHeading>\n                        <TableHeading>Account Number</TableHeading>\n                        <TableHeading>IFSC Code</TableHeading>\n                        <TableHeading>Edit</TableHeading>\n                        <TableHeading>Delete</TableHeading>\n                    </TableRow>\n                    {data.personalList.map((emp, id) => (\n                        <TableRow>\n                            <a href=\"\">\n                                <LinkTag to={`/pd/${emp.id}`}>\n                                    <Hover>\n                                        <TableData key={id}>{emp.code}</TableData>\n                                    </Hover>\n                                </LinkTag>\n                            </a>\n                            <TableData>{emp.name}</TableData>\n                            <TableData>{emp.email}</TableData>\n                            <TableData>{emp.role}</TableData>\n                            <TableData>{emp.pan_No}</TableData>\n                            <TableData>{emp.account_No}</TableData>\n                            <TableData>{emp.ifsc_code}</TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                               <LinkTag to={`/editpersonal/${emp.id}`}>\n                                    <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                                    </LinkTag>\n                            </TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n\n                                <Button onClick={() => handleDelete(emp.id)} >\n                                    <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\n                                </Button>\n\n                            </TableData>\n\n                        </TableRow>\n                    ))\n                    }\n                </Table>\n            </Container>\n\n        </Fragment>\n\n    )\n}\n\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/PersonalDetails.js",["298","299","300","301","302","303","304","305","306"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const Personal_Details = () => {\n    const { id } = useParams();\n    const [personState, setState] = useState({\n        name: \"\",\n        code: \"\",\n        email:\"\",\n        role: \" \",\n        pan_No: \"\",\n        account_No: \"\",\n        ifsc_code: \"\"\n    })\n\n   \n    const DisplayPD =gql`\n    query PDDisplay($id:String!){\n        personal(id:$id){\n            name\n            code\n            email\n            role\n            pan_No\n            account_No\n            ifsc_code\n          }\n    }\n    `;\n\n    const { loading, error, data } = useQuery(DisplayPD, { variables: { id: id } });\n\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n    if (data && data.personal) {\n        personState.name = data.personal.name;\n        personState.code = data.personal.code;\n        personState.email = data.personal.email;\n        personState.role = data.personal.role;\n        personState.pan_No = data.personal.pan_No;\n        personState.account_No = data.personal.account_No;\n        personState.ifsc_code = data.personal.ifsc_code;\n    }\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Personal Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={personState.name} readOnly/></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code </Lable></TableColumn>\n                        <TableColumn>:<Input  value={personState.code}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input  value={personState.email}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.role}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"PAN\"> PAN</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.pan_No}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Account Number\"> Account Number</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.account_No}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"IFSC\"> IFSC</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.ifsc_code}  readOnly/></TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/LoginPage.js",[],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HR_Page.js",["307","308","309","310","311","312","313"],"import { React, Fragment } from \"react\";\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport './images/mobile_black.png';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\ncolor: ${(props) => props.color};\nposition: sticky;\ntop: 0px;\nfont-size: 20px;\npadding: 8px;\ntext-align:${(props) => props.text};\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom:-5px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 3px solid #ddd;\n`;\nconst TableData = Styled.td`\nborder: 3px solid #ddd;\nheight:30px;\nfont-size:20px;\nfont-weight:bold;\npadding:40px;\nvertical-align:bottom;\ntext-align:left;\n&:hover {background-color: grey;}\n`;\nconst TableRow = Styled.tr`\nborder: 3px solid #ddd;\n &:nth-child(even){background-color: #F2F2F2;}\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Hover = Styled.a`\na:link{\n    color: black; \n    text-decoration: none;\n  }\n`;\nexport const HR = () => {\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\" text=\"center\">\n                HR\n                    </Navbar>\n            <Table>\n                <TableRow>\n                    <TableRow><TableData>LEAVE MANAGEMENT</TableData></TableRow>\n                    <TableRow><TableData> \n                         <Hover href=\"https://drive.google.com/file/d/1O5XlrbfEO6ZlTeAw762bbXQYoI5Ck0aA/view?usp=sharing\">LEAVE POLICY</Hover> \n                        </TableData></TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to={\"/personal\"}>\n                            PERSONAL DETAILS\n                        </LinkTag></TableData></TableRow>\n                    <TableRow><TableData>OFFER LETTER INCREMENT</TableData></TableRow>\n                    <TableRow ><TableData>DOCUMENTS</TableData></TableRow>\n                </TableRow>\n            </Table>\n        </Fragment>\n    )\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreateEmployee.js",["314","315","316","317"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql } from '@apollo/client';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n       props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const CreateEmployee = () => {\n\n    const [formData, createFormData] = useState({\n        username:\"\",\n        code: \"\",\n        email: \" \",\n        mobileNO: \"\",\n        department: \"\",\n        role: \"\",\n        joinDate: \"\"\n    });\n\n    const EmployeeList = gql`\n     mutation {\n         createEmployee(data: {\n              name:\"${formData.username}\",\n              code:\"${formData.code}\",\n              email:\"${formData.email}\",\n              mobileNo:\"${formData.mobileNO}\",\n              department:\"${formData.department}\",\n              role:\"${formData.role}\",\n             joinedDate:\"${formData.joinDate}\"   \n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [EmployeeCreate, { loading, error, data }] = useMutation(EmployeeList);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n         EmployeeCreate();\n        showToast();\n    };\n\n    toast.configure()\n    const showToast = () => {\n    if (error)  { \n        toast.info('successful');\n    }\n};\n\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Create an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobileNO\" onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn><Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinDate\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                                <LinkTag to={\"/list\"}>Submit</LinkTag>\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditEmployee.js",["318","319","320"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EditEmployee = () => {\n\n    const { id } = useParams();\n\n\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email: \" \",\n        mobileNo: \"\",\n        department: \"\",\n        role: \"\",\n        joinedDate: \"\"\n    })\n\n    const GetEmployeeById = gql`\n    query EmpDetails($id:String!){\n        employee(id:$id){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const EmployeeEdit = gql`\n     mutation UpdateEmployee($id: String!){\n         updateEmployee(id:$id,data: {\n              name:\"${empState.username}\",\n              code:\"${empState.code}\",\n              email:\"${empState.email}\",\n              mobileNo:\"${empState.mobileNo}\",\n              department:\"${empState.department}\",\n              role:\"${empState.role}\",\n             joinedDate:\"${empState.joinedDate}\"   \n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\n    const { loading, error, data } = useQuery(GetEmployeeById, { variables: { id: id } });\n\n    const [EditMutation,] = useMutation(EmployeeEdit);\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n    const handleChange = (e) => {\n        setState({\n            ...empState,\n            [e.target.name]: e.target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(empState);\n        EditMutation({ variables: { id: id } });\n\n    };\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Edit an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name:</Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" defaultValue={data.employee.name} onChange={handleChange} required /></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" defaultValue={data.employee.code} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" defaultValue={data.employee.email} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobileNo\" defaultValue={data.employee.mobileNo} onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" defaultValue={data.employee.department} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" defaultValue={data.employee.role} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn> <Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinedDate\" defaultValue={data.employee.joinedDate} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Button type=\"Cancel\">\n                            <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                        </Button></TableColumn>\n\n\n                        <TableColumn><Button onClick={handleSubmit}>\n                            <LinkTag to={\"/list\"}>\n                                Submit\n                        </LinkTag>\n                        </Button></TableColumn>\n\n                    </TableRow>\n\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EmployeeDetails.js",["321","322","323","324","325","326","327","328","329","330"],"import React, { Component, Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EmployeeDetails = () => {\n\n    const { id } = useParams();\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email: \" \",\n        mobileNo: \"\",\n        department: \"\",\n        role: \"\",\n        joinedDate: \"\"\n    })\n    const GetEmployeeById = gql`\n    query EmpDetails($id:String!){\n        employee(id:$id){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const { loading, error, data } = useQuery(GetEmployeeById, { variables: { id: id } });\n\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n    if (data && data.employee) {\n    empState.name = data.employee.name;\n    empState .code = data.employee.code;\n    empState.email = data.employee.email;\n    empState.mobileNo = data.employee.mobileNo;\n    empState.department = data.employee.department;\n    empState.role = data.employee.role;\n    empState.joinedDate = data.employee.joinedDate;\n    }\n\n\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Employee Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={empState.name} readOnly/></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code </Lable></TableColumn>\n                        <TableColumn>:<Input  value={empState.code}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input  value={empState.email}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number </Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.mobileNo}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department</Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.department} readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.role}  readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date</Lable></TableColumn>\n                        <TableColumn>:<Input value={empState.joinedDate} readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                   \n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreatePersonalDetails.js",["331","332","333","334"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n       props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\nexport const Create_PersonalDetails=()=>{\n\n    const [formData, createFormData] = useState({\n        name:\"\",\n        code: \"\",\n        email: \" \",\n       role: \"\",\n        pan: \"\",\n       account: \"\",\n        ifsc: \"\"\n    });\n\n    const Personal = gql`\n     mutation {\n        createPersonalDetails(data:{\n              name:\"${formData.name}\",\n              code:\"${formData.code}\",\n              email:\"${formData.email}\",\n              role:\"${formData.role}\",\n              pan_No:\"${formData.pan}\",\n              account_No:\"${formData.account}\",\n              ifsc_code:\"${formData.ifsc}\"   \n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [PDCreate, { loading, error, data }] = useMutation(Personal);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n      PDCreate();\n    };\n   console.log(formData.name);\n    return(\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Add Personal Details\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"name\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\"  name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\"  name=\"email\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                   \n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\"  onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"PAN\"> PAN: </Lable></TableColumn>\n                        <TableColumn><Input  name=\"pan\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Account Number\" >Account Number: </Lable></TableColumn>\n                        <TableColumn><Input name=\"account\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"IFSC Code\">IFSC Code: </Lable></TableColumn>\n                        <TableColumn><Input  name=\"ifsc\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/personal\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                                <LinkTag to={\"/personal\"}>Submit</LinkTag>\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    )\n}","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditPersonalDetails.js",["335","336","337"],"import React, { Component, Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EditPersonalDetails = () => {\n\n    const { id } = useParams();\n\n\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email:\"\",\n        role: \" \",\n        pan_No: \"\",\n        account_No: \"\",\n        ifsc_code: \"\"\n    })\n\n    const DisplayPD =gql`\n    query PDDisplay($id:String!){\n        personal(id:$id){\n            name\n            code\n            email\n            role\n            pan_No\n            account_No\n            ifsc_code\n          }\n    }\n    `;\n\n    const EditPd = gql`\n     mutation UpdatePersonalDetail($id: String!){\n        updatepersonalDetail(id:$id,data: {\n              name:\"${empState.username}\",\n              code:\"${empState.code}\",\n              email:\"${empState.email}\",\n              role:\"${empState.role}\",\n              pan_No:\"${empState.pan_No}\",\n              account_No:\"${empState.account_No}\",\n              ifsc_code:\"${empState.ifsc_code}\",\n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\n    const { loading, error, data } = useQuery(DisplayPD ,{ variables: { id: id } });\n\n    const [EditMutation] = useMutation(EditPd);\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n\n    const handleChange = (e) => {\n        setState({\n            ...empState,\n            [e.target.name]: e.target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(empState);\n        EditMutation({ variables: { id: id } });\n\n    };\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Edit Personal Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name:</Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" defaultValue={data.personal.name} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\"  name=\"code\" defaultValue={data.personal.code} onChange={handleChange}required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\"    name=\"email\" defaultValue={data.personal.email} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\"  name=\"role\" defaultValue={data.personal.role} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"PAN\"> PAN: </Lable></TableColumn>\n                        <TableColumn><Input   name=\"pan_No\" defaultValue={data.personal.pan_No} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"AccountNumber\">Account Number: </Lable></TableColumn>\n                        <TableColumn><Input  name=\"account_No\" defaultValue={data.personal.account_No} onChange={handleChange}  required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"IFSC\">IFSC: </Lable></TableColumn>\n                        <TableColumn><Input  name=\"ifsc_code\" defaultValue={data.personal.ifsc_code} onChange={handleChange}required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                   \n                    <TableRow>\n                        <TableColumn ><Button type=\"Cancel\">\n                            <LinkTag to={\"/personal\"}>Cancel</LinkTag>\n                        </Button></TableColumn>\n\n\n                        <TableColumn><Button onClick={handleSubmit}>\n                            <LinkTag to={\"/personal\"}>\n                                Submit\n                        </LinkTag>\n                        </Button></TableColumn>\n\n                    </TableRow>\n\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/Accounting.js",["338","339","340","341","342","343","344","345","346","347"],"/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/index.js",[],["348","349"],"/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/App.js",["350"],"import React from 'react';\nimport { Route,Router, Switch } from \"react-router-dom\";\nimport history from './history';\nimport { LoginPage } from \"./component/LoginPage\";\nimport { HomePage } from \"./component/HomePage\";\nimport { ListOfEmployee } from \"./component/ListOfEmployee\";\nimport { CreateEmployee } from \"./component/CreateEmployee\";\nimport { EditEmployee } from \"./component/EditEmployee\";\nimport { EmployeeDetails } from \"./component/EmployeeDetails\";\nimport { HR } from \"./component/HR_Page\";\nimport { PersonalDetails } from './component/ListofPersonalDetails';\nimport { Create_PersonalDetails } from \"./component/CreatePersonalDetails\";\nimport { Personal_Details } from \"./component/PersonalDetails\"\nimport {EditPersonalDetails} from \"./component/EditPersonalDetails\";\nimport {SystemDetails} from \"./component/Accounting\"\nimport { System_Details } from \"./component/SystemDetails\";\nimport{CreateSystem} from \"./component/CreateSystemDetail\";\nimport {EditSystem} from \"./component/EditSystemDetails\";\n\nimport './App.css'\nimport { from } from '@apollo/client';\nfunction App() {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={LoginPage} />\n        <Route exact path=\"/home\" component={HomePage} />\n        <Route exact path=\"/list\" component={ListOfEmployee} />\n        <Route exact path=\"/adding\" component={CreateEmployee} />\n        <Route exact path=\"/edit/:id/\" component={EditEmployee} />\n        <Route exact path=\"/display/:id/\" component={EmployeeDetails} />\n        <Route exact path=\"/hr\" component={HR} />\n        <Route exact path=\"/personal\" component={PersonalDetails} />\n        <Route exact path=\"/createpresonal\" component={Create_PersonalDetails} />\n        <Route exact path=\"/pd/:id/\" component={Personal_Details} />\n        <Route exact path=\"/editpersonal/:id\" component={EditPersonalDetails}/>\n        <Route exact path=\"/systemdetails\" component={SystemDetails} />\n        <Route exact path=\"/sd/:id\" component={System_Details} />\n        <Route exact path=\"/createsystem\" component={CreateSystem}/>\n        <Route exact path=\"/editsystem/:id\" component={EditSystem}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/history.js",[],"/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/LoginPage.js",[],"/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/HomePage.js",["351","352","353","354","355","356","357","358"],"import React, { Component, Fragment } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport './images/mobile_black.png';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\ncolor: ${(props) => props.color};\nposition: sticky;\ntop: 0px;\nfont-size: 20px;\npadding: 8px;\ntext-align:${(props) => props.text};\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom:-5px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 3px solid #ddd;\n`;\nconst TableData = Styled.td`\nborder: 3px solid #ddd;\nheight:30px;\nfont-size:20px;\nfont-weight:bold;\npadding:40px;\nvertical-align:bottom;\ntext-align:left;\n&:hover {background-color: grey;}\n`;\nconst TableRow = Styled.tr`\nborder: 3px solid #ddd;\n &:nth-child(even){background-color: #F2F2F2;}\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nexport const HomePage = () => {\n\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\" text=\"center\">\n                Home page\n                    </Navbar>\n            <Table>\n                <TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to={\"/hr\"} >HR </LinkTag></TableData></TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to={\"/systemdetails\"}> ACCOUNTING</LinkTag>\n                    </TableData></TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to={\"/list\"} >\n                            EMOPLOYEE DIRECTORY\n                             </LinkTag>\n                    </TableData></TableRow>\n                    <TableRow><TableData> CLIENT</TableData></TableRow>\n\n                    <TableRow ><TableData>\n\n                        DOCUMENTATION\n                        </TableData></TableRow>\n\n                </TableRow>\n            </Table>\n        </Fragment>\n    )\n}","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/ListOfEmployee.js",["359","360","361","362","363","364","365","366"],"/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/CreateEmployee.js",["367","368","369","370"],"/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/EditEmployee.js",["371","372","373"],"/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/EmployeeDetails.js",["374","375","376","377","378","379","380","381","382","383"],"/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/ListofPersonalDetails.js",["384","385","386"],"import { React, Fragment, useState } from \"react\";\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { useQuery, gql, useMutation } from '@apollo/client';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\ntext-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover = Styled.a`\n&:hover {\n    color:blue;\n`;\nexport const PersonalDetails = () => {\n    const { id } = useParams();\n    const [empId, setEmpId] = useState({ 'idToDelete': \"\" });\n    const Show = gql`\n   query{ \n    personalList{\n        id\n        name\n        code\n        email\n        role\n        pan_No\n        account_No\n        ifsc_code\n    }\n }`;\n    const DELETE_PD = gql`\n mutation DeletePD($id: String!){\n    deletePersonalDetails(id: $id){\n respCode,\n respMessage \n}\n}\n`;\n\n    const { loading, error, data } = useQuery(Show);\n    const [deleteMutation] = useMutation(DELETE_PD);\n    const handleDelete = (deleteId) => {\n        if (window.confirm(\"Do you really want to leave?\")) {\n            setEmpId({ 'idToDelete': deleteId });\n            console.log(\"handleDelte\", deleteId, empId);\n            deleteMutation({ variables: { id: deleteId } });\n\n        }\n        else {\n\n        }\n    };\n\n\n    console.log(data);\n    if (loading) return <p>loading</p>;\n    if (error) return <p>Error</p>;\n\n    return (\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">Personal Details\n<Button >\n                    <LinkTag to={\"/createpresonal\"}>\n                        <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>    ADD</LinkTag>\n                </Button>\n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n                    <TableRow>\n                        <TableHeading>ID</TableHeading>\n                        <TableHeading>Name</TableHeading>\n                        <TableHeading>Email</TableHeading>\n                        <TableHeading>Role</TableHeading>\n                        <TableHeading>PAN</TableHeading>\n                        <TableHeading>Account Number</TableHeading>\n                        <TableHeading>IFSC Code</TableHeading>\n                        <TableHeading>Edit</TableHeading>\n                        <TableHeading>Delete</TableHeading>\n                    </TableRow>\n                    {data.personalList.map((emp, id) => (\n                        <TableRow>\n                            <a href=\"\">\n                                <LinkTag to={`/pd/${emp.id}`}>\n                                    <Hover>\n                                        <TableData key={id}>{emp.code}</TableData>\n                                    </Hover>\n                                </LinkTag>\n                            </a>\n                            <TableData>{emp.name}</TableData>\n                            <TableData>{emp.email}</TableData>\n                            <TableData>{emp.role}</TableData>\n                            <TableData>{emp.pan_No}</TableData>\n                            <TableData>{emp.account_No}</TableData>\n                            <TableData>{emp.ifsc_code}</TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <LinkTag to={`/editpersonal/${emp.id}`}>\n                                    <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                                </LinkTag>\n                            </TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n\n                                <Button onClick={() => handleDelete(emp.id)} >\n                                    <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\n                                </Button>\n\n                            </TableData>\n\n                        </TableRow>\n                    ))\n                    }\n                </Table>\n            </Container>\n\n        </Fragment>\n\n    )\n}\n\n","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/HR_Page.js",["387","388","389","390","391","392","393"],"import { React, Fragment } from \"react\";\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport './images/mobile_black.png';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\ncolor: ${(props) => props.color};\nposition: sticky;\ntop: 0px;\nfont-size: 20px;\npadding: 8px;\ntext-align:${(props) => props.text};\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom:-5px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 3px solid #ddd;\n`;\nconst TableData = Styled.td`\nborder: 3px solid #ddd;\nheight:30px;\nfont-size:20px;\nfont-weight:bold;\npadding:40px;\nvertical-align:bottom;\ntext-align:left;\n&:hover {background-color: grey;}\n`;\nconst TableRow = Styled.tr`\nborder: 3px solid #ddd;\n &:nth-child(even){background-color: #F2F2F2;}\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Hover = Styled.a`\na:link{\n    color: black; \n    text-decoration: none;\n  }\n`;\nexport const HR = () => {\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\" text=\"center\">\n                HR\n                    </Navbar>\n            <Table>\n                <TableRow>\n                    <TableRow><TableData>LEAVE MANAGEMENT</TableData></TableRow>\n                    <TableRow><TableData>\n                        <Hover href=\"https://drive.google.com/file/d/1O5XlrbfEO6ZlTeAw762bbXQYoI5Ck0aA/view?usp=sharing\">LEAVE POLICY</Hover>\n                    </TableData></TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to={\"/personal\"}>\n                            PERSONAL DETAILS\n                        </LinkTag></TableData></TableRow>\n                    <TableRow><TableData>OFFER LETTER INCREMENT</TableData></TableRow>\n                    <TableRow ><TableData>DOCUMENTS</TableData></TableRow>\n                </TableRow>\n            </Table>\n        </Fragment>\n    )\n}\n","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/CreatePersonalDetails.js",["394","395","396","397"],"/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/PersonalDetails.js",["398","399","400","401","402","403","404","405","406"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const Personal_Details = () => {\n    const { id } = useParams();\n    const [personState, setState] = useState({\n        name: \"\",\n        code: \"\",\n        email: \"\",\n        role: \" \",\n        pan_No: \"\",\n        account_No: \"\",\n        ifsc_code: \"\"\n    })\n\n\n    const DisplayPD = gql`\n    query PDDisplay($id:String!){\n        personal(id:$id){\n            name\n            code\n            email\n            role\n            pan_No\n            account_No\n            ifsc_code\n          }\n    }\n    `;\n\n    const { loading, error, data } = useQuery(DisplayPD, { variables: { id: id } });\n\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n    if (data && data.personal) {\n        personState.name = data.personal.name;\n        personState.code = data.personal.code;\n        personState.email = data.personal.email;\n        personState.role = data.personal.role;\n        personState.pan_No = data.personal.pan_No;\n        personState.account_No = data.personal.account_No;\n        personState.ifsc_code = data.personal.ifsc_code;\n    }\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Personal Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={personState.name} readOnly /></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code </Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.code} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.email} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.role} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"PAN\"> PAN</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.pan_No} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Account Number\"> Account Number</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.account_No} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"IFSC\"> IFSC</Lable></TableColumn>\n                        <TableColumn>:<Input value={personState.ifsc_code} readOnly /></TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/EditPersonalDetails.js",["407","408","409"],"import React, { Component, Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EditPersonalDetails = () => {\n\n    const { id } = useParams();\n\n\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email: \"\",\n        role: \" \",\n        pan_No: \"\",\n        account_No: \"\",\n        ifsc_code: \"\"\n    })\n\n    const DisplayPD = gql`\n    query PDDisplay($id:String!){\n        personal(id:$id){\n            name\n            code\n            email\n            role\n            pan_No\n            account_No\n            ifsc_code\n          }\n    }\n    `;\n\n    const EditPd = gql`\n     mutation UpdatePersonalDetail($id: String!){\n        updatepersonalDetail(id:$id,data: {\n              name:\"${empState.username}\",\n              code:\"${empState.code}\",\n              email:\"${empState.email}\",\n              role:\"${empState.role}\",\n              pan_No:\"${empState.pan_No}\",\n              account_No:\"${empState.account_No}\",\n              ifsc_code:\"${empState.ifsc_code}\",\n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\n    const { loading, error, data } = useQuery(DisplayPD, { variables: { id: id } });\n\n    const [EditMutation] = useMutation(EditPd);\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n\n    const handleChange = (e) => {\n        setState({\n            ...empState,\n            [e.target.name]: e.target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(empState);\n        EditMutation({ variables: { id: id } });\n\n    };\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Edit Personal Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name:</Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" defaultValue={data.personal.name} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" defaultValue={data.personal.code} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" defaultValue={data.personal.email} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" defaultValue={data.personal.role} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"PAN\"> PAN: </Lable></TableColumn>\n                        <TableColumn><Input name=\"pan_No\" defaultValue={data.personal.pan_No} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"AccountNumber\">Account Number: </Lable></TableColumn>\n                        <TableColumn><Input name=\"account_No\" defaultValue={data.personal.account_No} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"IFSC\">IFSC: </Lable></TableColumn>\n                        <TableColumn><Input name=\"ifsc_code\" defaultValue={data.personal.ifsc_code} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n\n                    <TableRow>\n                        <TableColumn ><Button type=\"Cancel\">\n                            <LinkTag to={\"/personal\"}>Cancel</LinkTag>\n                        </Button></TableColumn>\n\n\n                        <TableColumn><Button onClick={handleSubmit}>\n                            <LinkTag to={\"/personal\"}>\n                                Submit\n                        </LinkTag>\n                        </Button></TableColumn>\n\n                    </TableRow>\n\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n",["410","411"],"/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/Accounting.js",["412","413","414"],"import { React, Fragment, useState } from \"react\";\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { useQuery, gql, useMutation } from '@apollo/client';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\n// text-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover = Styled.a`\n&:hover {\n    color:blue;\n`;\nexport const SystemDetails = () => {\n    const { id } = useParams();\n    const [empId, setEmpId] = useState({ 'idToDelete': \"\" });\n    const ShowSD = gql`\n   query{ \n    systemdetailsList{\n        id\n        name\n        code\n        device\n        config\n        slno_scode_regno\n        devicehistory\n    }\n }`;\n    const DELETE_SD = gql`\n mutation DeleteSD($id: String!){\n    deleteSystemDetails(id: $id){\n respCode,\n respMessage \n}\n}\n`;\n\n    const { loading, error, data } = useQuery(ShowSD);\n    const [deleteMutation] = useMutation(DELETE_SD);\n    const handleDelete = (deleteId) => {\n        if (window.confirm(\"Are you sure?\")) {\n            setEmpId({ 'idToDelete': deleteId });\n            console.log(\"handleDelte\", deleteId, empId);\n            deleteMutation({ variables: { id: deleteId } });\n\n        }\n        else {\n\n        }\n    };\n\n\n    console.log(data);\n    if (loading) return <p>loading</p>;\n    if (error) return <p>Error</p>;\n\n    return (\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">System Details\n<Button >\n                    <LinkTag to={\"/createsystem\"}>\n                        <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>    ADD\n                        </LinkTag>\n                </Button>\n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n                    <TableRow>\n                        <TableHeading>ID</TableHeading>\n                        <TableHeading>Name</TableHeading>\n                        <TableHeading>Device</TableHeading>\n                        <TableHeading>Config</TableHeading>\n                        <TableHeading>SL.No/S.Code/Reg.No</TableHeading>\n                        <TableHeading>DeviceHistory</TableHeading>\n                        <TableHeading>Edit</TableHeading>\n                        <TableHeading>Delete</TableHeading>\n                    </TableRow>\n                    {data.systemdetailsList.map((sys, id) => (\n                        <TableRow>\n                            <a href=\"\">\n                                <LinkTag to={`/sd/${sys.id}`}>\n                                    <Hover>\n                                        <TableData key={id}>{sys.code}</TableData>\n                                    </Hover>\n                                </LinkTag>\n                            </a>\n                            <TableData>{sys.name}</TableData>\n                            <TableData>{sys.device}</TableData>\n                            <TableData>{sys.config}</TableData>\n                            <TableData>{sys.slno_scode_regno}</TableData>\n                            <TableData>{sys.devicehistory}</TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <LinkTag to={`/editsystem/${sys.id}`}>\n                                    <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                                </LinkTag>\n                            </TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <FontAwesomeIcon icon={faTrash} onClick={() => handleDelete(sys.id)}></FontAwesomeIcon>\n                            </TableData>\n\n                        </TableRow>\n                    ))\n                    }\n                </Table>\n            </Container>\n\n        </Fragment>\n\n    )\n}","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/CreateSystemDetail.js",["415","416","417","418","419","420"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql } from '@apollo/client';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n       props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const CreateSystem = () => {\n\n    const [formData, createFormData] = useState({\n        name: \"\",\n        code: \"\",\n        device: \"\",\n        config: \" \",\n        slno_scode_regno: \"\",\n        devicehistory: \"\",\n    });\n\n    const System = gql`\n     mutation {\n        createSystemDetails(data: {\n              name:\"${formData.username}\",\n              code:\"${formData.code}\",\n              device:\"${formData.device}\",\n              config:\"${formData.config}\",\n              slno_scode_regno:\"${formData.slno_scode_regno}\",\n              devicehistory:\"${formData.devicehistory}\", \n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [SystemCreate, { loading, error, data }] = useMutation(System);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n         SystemCreate();\n        showToast();\n    };\n\n    toast.configure()\n    const showToast = () => {\n    if (error)  { \n        toast.info('successful');\n    }\n};\n\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Create an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Device\"> Device: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"device\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Config\"> Config: </Lable></TableColumn>\n                        <TableColumn><Input  name=\"config\" onChange={handleChange} type=\"text\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Sl.No/S.Code/Reg.No\">Sl.No/S.Code/Reg.No: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\"  name=\"slno_scode_regno\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Device History\">Device History: </Lable></TableColumn>\n                        <TableColumn><Input  name=\"devicehistory\" onChange={handleChange} type=\"text\" required /></TableColumn>\n                    </TableRow>\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/SystemDetails\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                                <LinkTag to={\"/SystemDetails\"}>Submit</LinkTag>\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/SystemDetails.js",["421","422","423","424","425","426","427","428","429"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const System_Details = () => {\n    const { id } = useParams();\n    const [systemState, setState] = useState({\n        name: \"\",\n        code: \"\",\n        device: \"\",\n        config: \" \",\n        slno_scode_regno: \"\",\n        devicehistory: \"\",\n    })\n\n\n    const DisplaySD = gql`\n    query SystemSD($id:String!){\n        system(id:$id){\n            name\n            code\n            device\n            config\n            slno_scode_regno\n            devicehistory\n          }\n    }\n    `;\n    const { loading, error, data } = useQuery(DisplaySD, { variables: { id: id } });\n\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n    if (data && data.system) {\n        systemState.name = data.system.name;\n        systemState.code = data.system.code;\n        systemState.device = data.system.device;\n        systemState.config = data.system.config;\n        systemState.slno_scode_regno = data.system.slno_scode_regno;\n        systemState.devicehistory = data.system.devicehistory;\n    }\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                System Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={systemState.name} readOnly /></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Code </Lable></TableColumn>\n                        <TableColumn>:<Input value={systemState.code} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Device\"> Device </Lable></TableColumn>\n                        <TableColumn>:<Input value={systemState.device} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Config\"> Config</Lable></TableColumn>\n                        <TableColumn>:<Input value={systemState.config} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"SL.No/S.Code/Reg.No\"> SL.No/S.Code/Reg.No</Lable></TableColumn>\n                        <TableColumn>:<Input value={systemState.slno_scode_regno} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Device History\"> Device History</Lable></TableColumn>\n                        <TableColumn>:<Input value={systemState.devicehistory} readOnly /></TableColumn>\n                    </TableRow>\n                    <Break />\n\n                </Table>\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/preethibandari/Desktop/Dev1/Project/Beeja/t-beeja-web/src/component/EditSystemDetails.js",["430","431","432","433","434"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EditSystem = () => {\n\n    const { id } = useParams();\n\n\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        device: \"\",\n        config: \" \",\n        slno_scode_regno: \"\",\n        devicehistory: \"\",\n    })\n\n    const DisplaySD = gql`\n    query SystemSD($id:String!){\n        system(id:$id){\n            name\n            code\n            device\n            config\n            slno_scode_regno\n            devicehistory\n          }\n    }\n    `;\n    const SystemEdit = gql`\n     mutation UpdatSystemDetails($id: String!){\n        updateSystemDetail(id:$id,data: {\n              name:\"${empState.username}\",\n              code:\"${empState.code}\",\n              device:\"${empState.device}\",\n              config:\"${empState.config}\",\n              slno_scode_regno:\"${empState.slno_scode_regno}\",\n              devicehistory:\"${empState.devicehistory}\",  \n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\n    const { loading, error, data } = useQuery(DisplaySD, { variables: { id: id } });\n\n    const [EditMutation] = useMutation(SystemEdit);\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n    const handleChange = (e) => {\n        setState({\n            ...empState,\n            [e.target.name]: e.target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(empState);\n        EditMutation({ variables: { id: id } });\n\n    };\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Edit Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name:</Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" defaultValue={data.system.name} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" defaultValue={data.system.code} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Device\"> Device: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"device\" defaultValue={data.system.device} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Config\"> Config: </Lable></TableColumn>\n                        <TableColumn><Input  name=\"config\" defaultValue={data.system.config} onChange={handleChange} type=\"text\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Sl.No/S.Code/Reg.No\">Sl.No/S.Code/Reg.No: </Lable></TableColumn>\n                        <TableColumn> <Input type=\"text\" name=\"slno_scode_regno\" defaultValue={data.system.slno_scode_regno} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                         <TableColumn ><Lable htmlFor=\"Device History\"> Device History:</Lable></TableColumn>\n                         <TableColumn ><Input type=\"text\" name=\"devicehistory\" defaultValue={data.system.devicehistory} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Button type=\"Cancel\">\n                            <LinkTag to={\"/SystemDetails\"}>Cancel</LinkTag>\n                        </Button></TableColumn>\n                       \n                       \n                        <TableColumn><Button onClick={handleSubmit}>\n                            <LinkTag to={\"/SystemDetails\"}>\n                                Submit\n                        </LinkTag>\n                        </Button></TableColumn>\n\n                    </TableRow>\n\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n",{"ruleId":"435","severity":1,"message":"436","line":16,"column":10,"nodeType":"437","messageId":"438","endLine":16,"endColumn":14},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"440","line":3,"column":27,"nodeType":"437","messageId":"438","endLine":3,"endColumn":37},{"ruleId":"435","severity":1,"message":"441","line":6,"column":27,"nodeType":"437","messageId":"438","endLine":6,"endColumn":35},{"ruleId":"435","severity":1,"message":"442","line":16,"column":7,"nodeType":"437","messageId":"438","endLine":16,"endColumn":11},{"ruleId":"435","severity":1,"message":"443","line":66,"column":7,"nodeType":"437","messageId":"438","endLine":66,"endColumn":19},{"ruleId":"435","severity":1,"message":"444","line":73,"column":7,"nodeType":"437","messageId":"438","endLine":73,"endColumn":15},{"ruleId":"435","severity":1,"message":"445","line":96,"column":13,"nodeType":"437","messageId":"438","endLine":96,"endColumn":15},{"ruleId":"446","severity":1,"message":"447","line":168,"column":29,"nodeType":"448","endLine":168,"endColumn":40},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"449","line":4,"column":10,"nodeType":"437","messageId":"438","endLine":4,"endColumn":18},{"ruleId":"435","severity":1,"message":"450","line":4,"column":20,"nodeType":"437","messageId":"438","endLine":4,"endColumn":23},{"ruleId":"435","severity":1,"message":"451","line":4,"column":25,"nodeType":"437","messageId":"438","endLine":4,"endColumn":36},{"ruleId":"435","severity":1,"message":"452","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":24},{"ruleId":"435","severity":1,"message":"453","line":6,"column":26,"nodeType":"437","messageId":"438","endLine":6,"endColumn":31},{"ruleId":"435","severity":1,"message":"442","line":22,"column":7,"nodeType":"437","messageId":"438","endLine":22,"endColumn":11},{"ruleId":"435","severity":1,"message":"454","line":45,"column":7,"nodeType":"437","messageId":"438","endLine":45,"endColumn":13},{"ruleId":"435","severity":1,"message":"452","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":24},{"ruleId":"435","severity":1,"message":"442","line":16,"column":7,"nodeType":"437","messageId":"438","endLine":16,"endColumn":11},{"ruleId":"435","severity":1,"message":"455","line":60,"column":7,"nodeType":"437","messageId":"438","endLine":60,"endColumn":16},{"ruleId":"435","severity":1,"message":"456","line":99,"column":46,"nodeType":"437","messageId":"438","endLine":99,"endColumn":50},{"ruleId":"435","severity":1,"message":"449","line":4,"column":28,"nodeType":"437","messageId":"438","endLine":4,"endColumn":36},{"ruleId":"435","severity":1,"message":"442","line":13,"column":7,"nodeType":"437","messageId":"438","endLine":13,"endColumn":11},{"ruleId":"435","severity":1,"message":"455","line":57,"column":7,"nodeType":"437","messageId":"438","endLine":57,"endColumn":16},{"ruleId":"435","severity":1,"message":"456","line":95,"column":40,"nodeType":"437","messageId":"438","endLine":95,"endColumn":44},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"442","line":14,"column":7,"nodeType":"437","messageId":"438","endLine":14,"endColumn":11},{"ruleId":"435","severity":1,"message":"455","line":58,"column":7,"nodeType":"437","messageId":"438","endLine":58,"endColumn":16},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"451","line":4,"column":10,"nodeType":"437","messageId":"438","endLine":4,"endColumn":21},{"ruleId":"435","severity":1,"message":"442","line":14,"column":7,"nodeType":"437","messageId":"438","endLine":14,"endColumn":11},{"ruleId":"435","severity":1,"message":"457","line":29,"column":7,"nodeType":"437","messageId":"438","endLine":29,"endColumn":16},{"ruleId":"435","severity":1,"message":"458","line":37,"column":7,"nodeType":"437","messageId":"438","endLine":37,"endColumn":13},{"ruleId":"435","severity":1,"message":"454","line":39,"column":7,"nodeType":"437","messageId":"438","endLine":39,"endColumn":13},{"ruleId":"435","severity":1,"message":"455","line":58,"column":7,"nodeType":"437","messageId":"438","endLine":58,"endColumn":16},{"ruleId":"435","severity":1,"message":"459","line":64,"column":7,"nodeType":"437","messageId":"438","endLine":64,"endColumn":14},{"ruleId":"435","severity":1,"message":"460","line":73,"column":22,"nodeType":"437","messageId":"438","endLine":73,"endColumn":30},{"ruleId":"461","severity":1,"message":"462","line":102,"column":5,"nodeType":"463","messageId":"464","endLine":102,"endColumn":19,"fix":"465"},{"ruleId":"435","severity":1,"message":"449","line":4,"column":10,"nodeType":"437","messageId":"438","endLine":4,"endColumn":18},{"ruleId":"435","severity":1,"message":"450","line":4,"column":20,"nodeType":"437","messageId":"438","endLine":4,"endColumn":23},{"ruleId":"435","severity":1,"message":"451","line":4,"column":25,"nodeType":"437","messageId":"438","endLine":4,"endColumn":36},{"ruleId":"435","severity":1,"message":"452","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":24},{"ruleId":"435","severity":1,"message":"453","line":6,"column":26,"nodeType":"437","messageId":"438","endLine":6,"endColumn":31},{"ruleId":"435","severity":1,"message":"442","line":22,"column":7,"nodeType":"437","messageId":"438","endLine":22,"endColumn":11},{"ruleId":"435","severity":1,"message":"454","line":45,"column":7,"nodeType":"437","messageId":"438","endLine":45,"endColumn":13},{"ruleId":"435","severity":1,"message":"442","line":17,"column":7,"nodeType":"437","messageId":"438","endLine":17,"endColumn":11},{"ruleId":"435","severity":1,"message":"445","line":76,"column":13,"nodeType":"437","messageId":"438","endLine":76,"endColumn":15},{"ruleId":"446","severity":1,"message":"447","line":143,"column":29,"nodeType":"448","endLine":143,"endColumn":40},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"451","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":21},{"ruleId":"435","severity":1,"message":"442","line":16,"column":7,"nodeType":"437","messageId":"438","endLine":16,"endColumn":11},{"ruleId":"435","severity":1,"message":"457","line":31,"column":7,"nodeType":"437","messageId":"438","endLine":31,"endColumn":16},{"ruleId":"435","severity":1,"message":"458","line":39,"column":7,"nodeType":"437","messageId":"438","endLine":39,"endColumn":13},{"ruleId":"435","severity":1,"message":"454","line":41,"column":7,"nodeType":"437","messageId":"438","endLine":41,"endColumn":13},{"ruleId":"435","severity":1,"message":"455","line":60,"column":7,"nodeType":"437","messageId":"438","endLine":60,"endColumn":16},{"ruleId":"435","severity":1,"message":"459","line":66,"column":7,"nodeType":"437","messageId":"438","endLine":66,"endColumn":14},{"ruleId":"435","severity":1,"message":"460","line":73,"column":25,"nodeType":"437","messageId":"438","endLine":73,"endColumn":33},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"442","line":13,"column":7,"nodeType":"437","messageId":"438","endLine":13,"endColumn":11},{"ruleId":"435","severity":1,"message":"455","line":57,"column":7,"nodeType":"437","messageId":"438","endLine":57,"endColumn":16},{"ruleId":"466","replacedBy":"467"},{"ruleId":"468","replacedBy":"469"},{"ruleId":"435","severity":1,"message":"436","line":18,"column":10,"nodeType":"437","messageId":"438","endLine":18,"endColumn":14},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"440","line":3,"column":27,"nodeType":"437","messageId":"438","endLine":3,"endColumn":37},{"ruleId":"435","severity":1,"message":"441","line":6,"column":27,"nodeType":"437","messageId":"438","endLine":6,"endColumn":35},{"ruleId":"435","severity":1,"message":"442","line":16,"column":7,"nodeType":"437","messageId":"438","endLine":16,"endColumn":11},{"ruleId":"435","severity":1,"message":"443","line":66,"column":7,"nodeType":"437","messageId":"438","endLine":66,"endColumn":19},{"ruleId":"435","severity":1,"message":"444","line":73,"column":7,"nodeType":"437","messageId":"438","endLine":73,"endColumn":15},{"ruleId":"435","severity":1,"message":"445","line":96,"column":13,"nodeType":"437","messageId":"438","endLine":96,"endColumn":15},{"ruleId":"446","severity":1,"message":"447","line":168,"column":29,"nodeType":"448","endLine":168,"endColumn":40},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"449","line":4,"column":10,"nodeType":"437","messageId":"438","endLine":4,"endColumn":18},{"ruleId":"435","severity":1,"message":"450","line":4,"column":20,"nodeType":"437","messageId":"438","endLine":4,"endColumn":23},{"ruleId":"435","severity":1,"message":"451","line":4,"column":25,"nodeType":"437","messageId":"438","endLine":4,"endColumn":36},{"ruleId":"435","severity":1,"message":"452","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":24},{"ruleId":"435","severity":1,"message":"453","line":6,"column":26,"nodeType":"437","messageId":"438","endLine":6,"endColumn":31},{"ruleId":"435","severity":1,"message":"442","line":22,"column":7,"nodeType":"437","messageId":"438","endLine":22,"endColumn":11},{"ruleId":"435","severity":1,"message":"454","line":45,"column":7,"nodeType":"437","messageId":"438","endLine":45,"endColumn":13},{"ruleId":"435","severity":1,"message":"442","line":17,"column":7,"nodeType":"437","messageId":"438","endLine":17,"endColumn":11},{"ruleId":"435","severity":1,"message":"445","line":76,"column":13,"nodeType":"437","messageId":"438","endLine":76,"endColumn":15},{"ruleId":"446","severity":1,"message":"447","line":143,"column":29,"nodeType":"448","endLine":143,"endColumn":40},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"451","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":21},{"ruleId":"435","severity":1,"message":"442","line":16,"column":7,"nodeType":"437","messageId":"438","endLine":16,"endColumn":11},{"ruleId":"435","severity":1,"message":"457","line":31,"column":7,"nodeType":"437","messageId":"438","endLine":31,"endColumn":16},{"ruleId":"435","severity":1,"message":"458","line":39,"column":7,"nodeType":"437","messageId":"438","endLine":39,"endColumn":13},{"ruleId":"435","severity":1,"message":"454","line":41,"column":7,"nodeType":"437","messageId":"438","endLine":41,"endColumn":13},{"ruleId":"435","severity":1,"message":"455","line":60,"column":7,"nodeType":"437","messageId":"438","endLine":60,"endColumn":16},{"ruleId":"435","severity":1,"message":"459","line":66,"column":7,"nodeType":"437","messageId":"438","endLine":66,"endColumn":14},{"ruleId":"435","severity":1,"message":"460","line":73,"column":25,"nodeType":"437","messageId":"438","endLine":73,"endColumn":33},{"ruleId":"435","severity":1,"message":"449","line":4,"column":10,"nodeType":"437","messageId":"438","endLine":4,"endColumn":18},{"ruleId":"435","severity":1,"message":"450","line":4,"column":20,"nodeType":"437","messageId":"438","endLine":4,"endColumn":23},{"ruleId":"435","severity":1,"message":"451","line":4,"column":25,"nodeType":"437","messageId":"438","endLine":4,"endColumn":36},{"ruleId":"435","severity":1,"message":"452","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":24},{"ruleId":"435","severity":1,"message":"453","line":6,"column":26,"nodeType":"437","messageId":"438","endLine":6,"endColumn":31},{"ruleId":"435","severity":1,"message":"442","line":22,"column":7,"nodeType":"437","messageId":"438","endLine":22,"endColumn":11},{"ruleId":"435","severity":1,"message":"454","line":45,"column":7,"nodeType":"437","messageId":"438","endLine":45,"endColumn":13},{"ruleId":"435","severity":1,"message":"452","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":24},{"ruleId":"435","severity":1,"message":"442","line":16,"column":7,"nodeType":"437","messageId":"438","endLine":16,"endColumn":11},{"ruleId":"435","severity":1,"message":"455","line":60,"column":7,"nodeType":"437","messageId":"438","endLine":60,"endColumn":16},{"ruleId":"435","severity":1,"message":"456","line":99,"column":46,"nodeType":"437","messageId":"438","endLine":99,"endColumn":50},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"442","line":14,"column":7,"nodeType":"437","messageId":"438","endLine":14,"endColumn":11},{"ruleId":"435","severity":1,"message":"455","line":58,"column":7,"nodeType":"437","messageId":"438","endLine":58,"endColumn":16},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"451","line":4,"column":10,"nodeType":"437","messageId":"438","endLine":4,"endColumn":21},{"ruleId":"435","severity":1,"message":"442","line":14,"column":7,"nodeType":"437","messageId":"438","endLine":14,"endColumn":11},{"ruleId":"435","severity":1,"message":"457","line":29,"column":7,"nodeType":"437","messageId":"438","endLine":29,"endColumn":16},{"ruleId":"435","severity":1,"message":"458","line":37,"column":7,"nodeType":"437","messageId":"438","endLine":37,"endColumn":13},{"ruleId":"435","severity":1,"message":"454","line":39,"column":7,"nodeType":"437","messageId":"438","endLine":39,"endColumn":13},{"ruleId":"435","severity":1,"message":"455","line":58,"column":7,"nodeType":"437","messageId":"438","endLine":58,"endColumn":16},{"ruleId":"435","severity":1,"message":"459","line":64,"column":7,"nodeType":"437","messageId":"438","endLine":64,"endColumn":14},{"ruleId":"435","severity":1,"message":"460","line":73,"column":22,"nodeType":"437","messageId":"438","endLine":73,"endColumn":30},{"ruleId":"461","severity":1,"message":"462","line":102,"column":5,"nodeType":"463","messageId":"464","endLine":102,"endColumn":19,"fix":"470"},{"ruleId":"435","severity":1,"message":"449","line":4,"column":28,"nodeType":"437","messageId":"438","endLine":4,"endColumn":36},{"ruleId":"435","severity":1,"message":"442","line":13,"column":7,"nodeType":"437","messageId":"438","endLine":13,"endColumn":11},{"ruleId":"435","severity":1,"message":"455","line":57,"column":7,"nodeType":"437","messageId":"438","endLine":57,"endColumn":16},{"ruleId":"435","severity":1,"message":"456","line":95,"column":40,"nodeType":"437","messageId":"438","endLine":95,"endColumn":44},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"442","line":13,"column":7,"nodeType":"437","messageId":"438","endLine":13,"endColumn":11},{"ruleId":"435","severity":1,"message":"455","line":57,"column":7,"nodeType":"437","messageId":"438","endLine":57,"endColumn":16},{"ruleId":"435","severity":1,"message":"471","line":1,"column":27,"nodeType":"437","messageId":"438","endLine":1,"endColumn":35},{"ruleId":"435","severity":1,"message":"472","line":3,"column":16,"nodeType":"437","messageId":"438","endLine":3,"endColumn":25},{"ruleId":"435","severity":1,"message":"473","line":5,"column":18,"nodeType":"437","messageId":"438","endLine":5,"endColumn":24},{"ruleId":"435","severity":1,"message":"474","line":5,"column":26,"nodeType":"437","messageId":"438","endLine":5,"endColumn":33},{"ruleId":"435","severity":1,"message":"449","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":18},{"ruleId":"435","severity":1,"message":"450","line":6,"column":20,"nodeType":"437","messageId":"438","endLine":6,"endColumn":23},{"ruleId":"435","severity":1,"message":"451","line":6,"column":25,"nodeType":"437","messageId":"438","endLine":6,"endColumn":36},{"ruleId":"435","severity":1,"message":"442","line":17,"column":7,"nodeType":"437","messageId":"438","endLine":17,"endColumn":11},{"ruleId":"435","severity":1,"message":"455","line":55,"column":7,"nodeType":"437","messageId":"438","endLine":55,"endColumn":16},{"ruleId":"435","severity":1,"message":"475","line":71,"column":7,"nodeType":"437","messageId":"438","endLine":71,"endColumn":12},{"ruleId":"466","replacedBy":"476"},{"ruleId":"468","replacedBy":"477"},{"ruleId":"435","severity":1,"message":"436","line":21,"column":10,"nodeType":"437","messageId":"438","endLine":21,"endColumn":14},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"449","line":4,"column":10,"nodeType":"437","messageId":"438","endLine":4,"endColumn":18},{"ruleId":"435","severity":1,"message":"450","line":4,"column":20,"nodeType":"437","messageId":"438","endLine":4,"endColumn":23},{"ruleId":"435","severity":1,"message":"451","line":4,"column":25,"nodeType":"437","messageId":"438","endLine":4,"endColumn":36},{"ruleId":"435","severity":1,"message":"452","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":24},{"ruleId":"435","severity":1,"message":"453","line":6,"column":26,"nodeType":"437","messageId":"438","endLine":6,"endColumn":31},{"ruleId":"435","severity":1,"message":"442","line":22,"column":7,"nodeType":"437","messageId":"438","endLine":22,"endColumn":11},{"ruleId":"435","severity":1,"message":"454","line":45,"column":7,"nodeType":"437","messageId":"438","endLine":45,"endColumn":13},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"440","line":3,"column":27,"nodeType":"437","messageId":"438","endLine":3,"endColumn":37},{"ruleId":"435","severity":1,"message":"441","line":6,"column":27,"nodeType":"437","messageId":"438","endLine":6,"endColumn":35},{"ruleId":"435","severity":1,"message":"442","line":16,"column":7,"nodeType":"437","messageId":"438","endLine":16,"endColumn":11},{"ruleId":"435","severity":1,"message":"443","line":66,"column":7,"nodeType":"437","messageId":"438","endLine":66,"endColumn":19},{"ruleId":"435","severity":1,"message":"444","line":73,"column":7,"nodeType":"437","messageId":"438","endLine":73,"endColumn":15},{"ruleId":"435","severity":1,"message":"445","line":96,"column":13,"nodeType":"437","messageId":"438","endLine":96,"endColumn":15},{"ruleId":"446","severity":1,"message":"447","line":168,"column":29,"nodeType":"448","endLine":168,"endColumn":40},{"ruleId":"435","severity":1,"message":"452","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":24},{"ruleId":"435","severity":1,"message":"442","line":16,"column":7,"nodeType":"437","messageId":"438","endLine":16,"endColumn":11},{"ruleId":"435","severity":1,"message":"455","line":60,"column":7,"nodeType":"437","messageId":"438","endLine":60,"endColumn":16},{"ruleId":"435","severity":1,"message":"456","line":99,"column":46,"nodeType":"437","messageId":"438","endLine":99,"endColumn":50},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"442","line":14,"column":7,"nodeType":"437","messageId":"438","endLine":14,"endColumn":11},{"ruleId":"435","severity":1,"message":"455","line":58,"column":7,"nodeType":"437","messageId":"438","endLine":58,"endColumn":16},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"451","line":4,"column":10,"nodeType":"437","messageId":"438","endLine":4,"endColumn":21},{"ruleId":"435","severity":1,"message":"442","line":14,"column":7,"nodeType":"437","messageId":"438","endLine":14,"endColumn":11},{"ruleId":"435","severity":1,"message":"457","line":29,"column":7,"nodeType":"437","messageId":"438","endLine":29,"endColumn":16},{"ruleId":"435","severity":1,"message":"458","line":37,"column":7,"nodeType":"437","messageId":"438","endLine":37,"endColumn":13},{"ruleId":"435","severity":1,"message":"454","line":39,"column":7,"nodeType":"437","messageId":"438","endLine":39,"endColumn":13},{"ruleId":"435","severity":1,"message":"455","line":58,"column":7,"nodeType":"437","messageId":"438","endLine":58,"endColumn":16},{"ruleId":"435","severity":1,"message":"459","line":64,"column":7,"nodeType":"437","messageId":"438","endLine":64,"endColumn":14},{"ruleId":"435","severity":1,"message":"460","line":73,"column":22,"nodeType":"437","messageId":"438","endLine":73,"endColumn":30},{"ruleId":"461","severity":1,"message":"462","line":102,"column":5,"nodeType":"463","messageId":"464","endLine":102,"endColumn":19,"fix":"478"},{"ruleId":"435","severity":1,"message":"442","line":17,"column":7,"nodeType":"437","messageId":"438","endLine":17,"endColumn":11},{"ruleId":"435","severity":1,"message":"445","line":76,"column":13,"nodeType":"437","messageId":"438","endLine":76,"endColumn":15},{"ruleId":"446","severity":1,"message":"447","line":143,"column":29,"nodeType":"448","endLine":143,"endColumn":40},{"ruleId":"435","severity":1,"message":"449","line":4,"column":10,"nodeType":"437","messageId":"438","endLine":4,"endColumn":18},{"ruleId":"435","severity":1,"message":"450","line":4,"column":20,"nodeType":"437","messageId":"438","endLine":4,"endColumn":23},{"ruleId":"435","severity":1,"message":"451","line":4,"column":25,"nodeType":"437","messageId":"438","endLine":4,"endColumn":36},{"ruleId":"435","severity":1,"message":"452","line":6,"column":10,"nodeType":"437","messageId":"438","endLine":6,"endColumn":24},{"ruleId":"435","severity":1,"message":"453","line":6,"column":26,"nodeType":"437","messageId":"438","endLine":6,"endColumn":31},{"ruleId":"435","severity":1,"message":"442","line":22,"column":7,"nodeType":"437","messageId":"438","endLine":22,"endColumn":11},{"ruleId":"435","severity":1,"message":"454","line":45,"column":7,"nodeType":"437","messageId":"438","endLine":45,"endColumn":13},{"ruleId":"435","severity":1,"message":"449","line":4,"column":28,"nodeType":"437","messageId":"438","endLine":4,"endColumn":36},{"ruleId":"435","severity":1,"message":"442","line":13,"column":7,"nodeType":"437","messageId":"438","endLine":13,"endColumn":11},{"ruleId":"435","severity":1,"message":"455","line":57,"column":7,"nodeType":"437","messageId":"438","endLine":57,"endColumn":16},{"ruleId":"435","severity":1,"message":"456","line":95,"column":40,"nodeType":"437","messageId":"438","endLine":95,"endColumn":44},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"451","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":21},{"ruleId":"435","severity":1,"message":"442","line":16,"column":7,"nodeType":"437","messageId":"438","endLine":16,"endColumn":11},{"ruleId":"435","severity":1,"message":"457","line":31,"column":7,"nodeType":"437","messageId":"438","endLine":31,"endColumn":16},{"ruleId":"435","severity":1,"message":"458","line":39,"column":7,"nodeType":"437","messageId":"438","endLine":39,"endColumn":13},{"ruleId":"435","severity":1,"message":"454","line":41,"column":7,"nodeType":"437","messageId":"438","endLine":41,"endColumn":13},{"ruleId":"435","severity":1,"message":"455","line":60,"column":7,"nodeType":"437","messageId":"438","endLine":60,"endColumn":16},{"ruleId":"435","severity":1,"message":"459","line":66,"column":7,"nodeType":"437","messageId":"438","endLine":66,"endColumn":14},{"ruleId":"435","severity":1,"message":"460","line":73,"column":25,"nodeType":"437","messageId":"438","endLine":73,"endColumn":33},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"442","line":13,"column":7,"nodeType":"437","messageId":"438","endLine":13,"endColumn":11},{"ruleId":"435","severity":1,"message":"455","line":57,"column":7,"nodeType":"437","messageId":"438","endLine":57,"endColumn":16},{"ruleId":"466","replacedBy":"479"},{"ruleId":"468","replacedBy":"480"},{"ruleId":"435","severity":1,"message":"442","line":17,"column":7,"nodeType":"437","messageId":"438","endLine":17,"endColumn":11},{"ruleId":"435","severity":1,"message":"445","line":76,"column":13,"nodeType":"437","messageId":"438","endLine":76,"endColumn":15},{"ruleId":"446","severity":1,"message":"447","line":142,"column":29,"nodeType":"448","endLine":142,"endColumn":40},{"ruleId":"435","severity":1,"message":"452","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":24},{"ruleId":"435","severity":1,"message":"442","line":16,"column":7,"nodeType":"437","messageId":"438","endLine":16,"endColumn":11},{"ruleId":"435","severity":1,"message":"457","line":31,"column":7,"nodeType":"437","messageId":"438","endLine":31,"endColumn":16},{"ruleId":"435","severity":1,"message":"458","line":39,"column":7,"nodeType":"437","messageId":"438","endLine":39,"endColumn":13},{"ruleId":"435","severity":1,"message":"455","line":60,"column":7,"nodeType":"437","messageId":"438","endLine":60,"endColumn":16},{"ruleId":"435","severity":1,"message":"456","line":97,"column":44,"nodeType":"437","messageId":"438","endLine":97,"endColumn":48},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"451","line":5,"column":10,"nodeType":"437","messageId":"438","endLine":5,"endColumn":21},{"ruleId":"435","severity":1,"message":"442","line":16,"column":7,"nodeType":"437","messageId":"438","endLine":16,"endColumn":11},{"ruleId":"435","severity":1,"message":"457","line":31,"column":7,"nodeType":"437","messageId":"438","endLine":31,"endColumn":16},{"ruleId":"435","severity":1,"message":"458","line":39,"column":7,"nodeType":"437","messageId":"438","endLine":39,"endColumn":13},{"ruleId":"435","severity":1,"message":"454","line":41,"column":7,"nodeType":"437","messageId":"438","endLine":41,"endColumn":13},{"ruleId":"435","severity":1,"message":"455","line":60,"column":7,"nodeType":"437","messageId":"438","endLine":60,"endColumn":16},{"ruleId":"435","severity":1,"message":"459","line":66,"column":7,"nodeType":"437","messageId":"438","endLine":66,"endColumn":14},{"ruleId":"435","severity":1,"message":"460","line":73,"column":25,"nodeType":"437","messageId":"438","endLine":73,"endColumn":33},{"ruleId":"435","severity":1,"message":"439","line":1,"column":17,"nodeType":"437","messageId":"438","endLine":1,"endColumn":26},{"ruleId":"435","severity":1,"message":"442","line":14,"column":7,"nodeType":"437","messageId":"438","endLine":14,"endColumn":11},{"ruleId":"435","severity":1,"message":"457","line":29,"column":7,"nodeType":"437","messageId":"438","endLine":29,"endColumn":16},{"ruleId":"435","severity":1,"message":"458","line":37,"column":7,"nodeType":"437","messageId":"438","endLine":37,"endColumn":13},{"ruleId":"435","severity":1,"message":"455","line":58,"column":7,"nodeType":"437","messageId":"438","endLine":58,"endColumn":16},"no-unused-vars","'from' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'useHistory' is defined but never used.","'faSearch' is defined but never used.","'Logo' is assigned a value but never used.","'Actionbutton' is assigned a value but never used.","'IdButton' is assigned a value but never used.","'id' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useQuery' is defined but never used.","'gql' is defined but never used.","'useMutation' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'Button' is assigned a value but never used.","'TableData' is assigned a value but never used.","'data' is assigned a value but never used.","'SelectBox' is assigned a value but never used.","'Option' is assigned a value but never used.","'LinkTag' is assigned a value but never used.","'setState' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property code.","MemberExpression","unexpectedWhitespace",{"range":"481","text":"482"},"no-native-reassign",["483"],"no-negated-in-lhs",["484"],{"range":"485","text":"482"},"'useState' is defined but never used.","'useParams' is defined but never used.","'faEdit' is defined but never used.","'faTrash' is defined but never used.","'Hover' is assigned a value but never used.",["483"],["484"],{"range":"486","text":"482"},["483"],["484"],[2037,2039],".","no-global-assign","no-unsafe-negation",[2037,2039],[2037,2039]]