[{"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/index.js":"1","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/App.js":"2","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/reportWebVitals.js":"3","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/history.js":"4","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HomePage.js":"5","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/LoginPage.js":"6","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListOfEmployee.js":"7","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreateEmployee.js":"8","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditEmployee.js":"9"},{"size":712,"mtime":1609733795367,"results":"10","hashOfConfig":"11"},{"size":8200,"mtime":1609733798655,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607967946513,"results":"13","hashOfConfig":"11"},{"size":84,"mtime":1607967946513,"results":"14","hashOfConfig":"11"},{"size":2611,"mtime":1609759825269,"results":"15","hashOfConfig":"11"},{"size":1911,"mtime":1609733792955,"results":"16","hashOfConfig":"11"},{"size":5300,"mtime":1609910751947,"results":"17","hashOfConfig":"11"},{"size":7077,"mtime":1609842473070,"results":"18","hashOfConfig":"11"},{"size":7225,"mtime":1609826232399,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"xj1n5e",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/index.js",[],["43","44"],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/App.js",[],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/reportWebVitals.js",[],["45","46"],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/history.js",[],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/HomePage.js",["47","48","49","50","51","52","53","54","55","56"],"import React, { Component, Fragment } from 'react'\nimport Styled from '@emotion/styled';\nimport ListsofEmployees from \"./ListOfEmployee\";\nimport {Link} from 'react-router-dom';\nimport { useQuery, gql,useMutation } from '@apollo/client';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEdit,faTrash} from '@fortawesome/free-solid-svg-icons';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\ncolor: ${(props) => props.color};\nposition: sticky;\ntop: 0px;\nfont-size: 20px;\npadding: 8px;\ntext-align:${(props)=>props.text};\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom:-5px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 3px solid #ddd;\n`;\nconst TableData = Styled.td`\nborder: 3px solid #ddd;\nheight:30px;\nfont-size:20px;\nfont-weight:bold;\npadding:40px;\nvertical-align:bottom;\ntext-align:left;\n&:hover {background-color: grey;}\n`;\nconst TableRow = Styled.tr`\nborder: 3px solid #ddd;\n &:nth-child(even){background-color: #F2F2F2;}\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\nprops.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\n\nexport const HomePage =()=>{\n\n    \n    // if (loading) return <p>Loading ...</p>;\n    // if (error) return <p>Error</p>;\n\n        return (\n            <Fragment>\n                {/* <Navbar bgColor=\"powderblue\" color=\"black\">\n                    <Logo src={require(\"../images/Logo.png\") } /> Beeja\n                </Navbar> */}\n                <Navbar bgColor=\"grey\" color=\"white\" text=\"center\">\n                    Home page\n                    </Navbar>\n                    <Table>\n                        <TableRow>\n                        <TableRow><TableData> HR</TableData></TableRow>\n                        <TableRow><TableData> ACCOUNTING</TableData></TableRow>\n                        <TableRow><TableData>\n                            <LinkTag to={\"/list\"}>\n                            EMOPLOYEE DIRECTORY\n                            </LinkTag>\n                            </TableData></TableRow>\n                        <TableRow><TableData> CLIENT</TableData></TableRow>\n                       {/* {data.deleteEmployee.map((id) =>( */}\n                        <TableRow><TableData> \n                            \n                             </TableData></TableRow>\n                              {/* ))}  */}\n                       </TableRow>\n                    </Table>\n            </Fragment>\n        )\n    }","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/LoginPage.js",[],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/ListOfEmployee.js",["57","58","59"],"/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/CreateEmployee.js",["60","61","62"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql } from '@apollo/client';\nimport {toast} from 'react-toastify';  \nimport 'react-toastify/dist/ReactToastify.css';\n\n// import {gql} from 'graphql-tag'\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\nprops.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const CreateEmployee = () => {\n\n    const [formData, updateFormData] = useState({\n        username: \"\",\n        code: \"\",\n        email: \" \",\n        mobileNO: \"\",\n        department: \"\",\n        role: \"\",\n        joinDate: \"\"\n    });\n    // toast.configure() \n    // const remind = (message)=>{  \n    //     toast.success(message,\n    //     {position: toast.POSITION.BOTTOM_RIGHT})  \n    //   }\n\n    const EmployeeList = gql`\n     mutation {\n         createEmployee(data: {\n              name:\"${formData.username}\",\n              code:\"${formData.code}\",\n              email:\"${formData.email}\",\n              mobileNo:\"${formData.mobileNO}\",\n              department:\"${formData.department}\",\n              role:\"${formData.role}\",\n             joinedDate:\"${formData.joinDate}\"   \n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [EmployeeCreate, { loading, error, data }] = useMutation(EmployeeList);\n    if (loading) {\n        return <p>Loading....</p>\n    } \n    if (error) {\n        console.log(error)\n        return <p></p>\n    }\n    if (data) {\n        console.log(data)\n        \n        // return <p>{remind(data.respMessage)}</p>\n    } \n\n    const handleChange = (e) => {\n        updateFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        EmployeeCreate();\n    };\n    \n    return (\n        \n        <Fragment>\n            {/* <Navbar bgColor=\"powderblue\" color=\"black\">\n                        <Logo src={require(\"../images/Logo.png\")}></Logo> Beeja\n                        </Navbar> */}\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Create an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobileNO\" onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn> <Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinDate\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn >\n                             <Button type=\"Cancel\">\n                                   <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                             </Button>\n                         </TableColumn>\n                        <TableColumn>\n                             <Button  onClick={handleSubmit}>Submit\n                                 \n                             </Button>\n                       </TableColumn>\n                    </TableRow>\n\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}","/home/preethibandari/Documents/Dev/Project/Beeja/my-beeja/beejafrontend/src/component/EditEmployee.js",["63","64","65","66"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql } from '@apollo/client';\n\n// import {gql} from 'graphql-tag'\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n//  const MUTATION = gql`\n//   mutation  {\n//   createEmployee{\n//       name\n//       code\n//       email\n//       mobileNo\n//       department\n//       role\n//       joinDate\n\n//     }\n//   }\n// `;\n\nexport const EditEmployee = () => {\n\n    const EDIT_USER = gql`\n    mutation($id: String!, $name: String!,$code: String!, $email: String, $mobileNo: String!, $department: String!, $role: String!) {\n       updateEmployee(id: $id, name: $name, code: $code, email: $email, mobileNo: $mobileNo, department: $department, role: $role)\n    }\n  `;\n\n\n    const [formData, updateFormData] = useState({\n        username: \"\",\n        code: \"\",\n        email: \" \",\n        mobileNO: \"\",\n        department: \"\",\n        role: \"\",\n        joinDate: \"\"\n    });\n\n\n    const EmployeeList = gql`\n     mutation {\n         createEmployee(data: {\n              name:\"${formData.username}\",\n              code:\"${formData.code}\",\n              email:\"${formData.email}\",\n              mobileNo:\"${formData.mobileNO}\",\n              department:\"${formData.department}\",\n              role:\"${formData.role}\",\n             joinedDate:\"${formData.joinDate}\"   \n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n          const [editMutation] = useMutation(EDIT_USER, { variables: { id: \"67\", name: \"Username\", email: \"email\" }});\n    const [EmployeeCreate, { loading, error, data }] = useMutation(EmployeeList);\n    if (loading) return <p>Loading....</p>\n    if (error) return \n    \n    const handleChange = (e) => {\n        updateFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        console.log(formData);\n        EmployeeCreate();\n    };\n\n    return (\n        <Fragment>\n            {/* <Navbar bgColor=\"powderblue\" color=\"black\">\n                        <Logo src={require(\"../images/Logo.png\")}></Logo> Beeja\n                        </Navbar> */}\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Edit an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobileNO\" onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn> <Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinDate\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Button type=\"Cancel\">\n                        <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                             </Button></TableColumn>\n                        <TableColumn><Button onClick={editMutation}>\n                        <LinkTag to={\"/list\"}>\n                        Submit\n                        </LinkTag></Button></TableColumn>\n                    </TableRow>\n\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"67","replacedBy":"71"},{"ruleId":"69","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"77","line":3,"column":8,"nodeType":"75","messageId":"76","endLine":3,"endColumn":24},{"ruleId":"73","severity":1,"message":"78","line":5,"column":10,"nodeType":"75","messageId":"76","endLine":5,"endColumn":18},{"ruleId":"73","severity":1,"message":"79","line":5,"column":20,"nodeType":"75","messageId":"76","endLine":5,"endColumn":23},{"ruleId":"73","severity":1,"message":"80","line":5,"column":24,"nodeType":"75","messageId":"76","endLine":5,"endColumn":35},{"ruleId":"73","severity":1,"message":"81","line":6,"column":9,"nodeType":"75","messageId":"76","endLine":6,"endColumn":24},{"ruleId":"73","severity":1,"message":"82","line":7,"column":9,"nodeType":"75","messageId":"76","endLine":7,"endColumn":15},{"ruleId":"73","severity":1,"message":"83","line":7,"column":16,"nodeType":"75","messageId":"76","endLine":7,"endColumn":23},{"ruleId":"73","severity":1,"message":"84","line":22,"column":7,"nodeType":"75","messageId":"76","endLine":22,"endColumn":11},{"ruleId":"73","severity":1,"message":"85","line":45,"column":7,"nodeType":"75","messageId":"76","endLine":45,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"84","line":18,"column":7,"nodeType":"75","messageId":"76","endLine":18,"endColumn":11},{"ruleId":"73","severity":1,"message":"86","line":68,"column":7,"nodeType":"75","messageId":"76","endLine":68,"endColumn":19},{"ruleId":"73","severity":1,"message":"87","line":5,"column":9,"nodeType":"75","messageId":"76","endLine":5,"endColumn":14},{"ruleId":"73","severity":1,"message":"84","line":18,"column":7,"nodeType":"75","messageId":"76","endLine":18,"endColumn":11},{"ruleId":"73","severity":1,"message":"88","line":62,"column":7,"nodeType":"75","messageId":"76","endLine":62,"endColumn":16},{"ruleId":"73","severity":1,"message":"84","line":16,"column":7,"nodeType":"75","messageId":"76","endLine":16,"endColumn":11},{"ruleId":"73","severity":1,"message":"88","line":60,"column":7,"nodeType":"75","messageId":"76","endLine":60,"endColumn":16},{"ruleId":"73","severity":1,"message":"89","line":122,"column":46,"nodeType":"75","messageId":"76","endLine":122,"endColumn":50},{"ruleId":"73","severity":1,"message":"90","line":133,"column":11,"nodeType":"75","messageId":"76","endLine":133,"endColumn":23},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],["91"],["92"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'ListsofEmployees' is defined but never used.","'useQuery' is defined but never used.","'gql' is defined but never used.","'useMutation' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faEdit' is defined but never used.","'faTrash' is defined but never used.","'Logo' is assigned a value but never used.","'Button' is assigned a value but never used.","'Actionbutton' is assigned a value but never used.","'toast' is defined but never used.","'TableData' is assigned a value but never used.","'data' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]