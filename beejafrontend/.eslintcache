[{"/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/index.js":"1","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/App.js":"2","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/history.js":"3","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/LoginPage.js":"4","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/HomePage.js":"5","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/ListOfEmployee.js":"6","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/CreateEmployee.js":"7","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/EmployeeDetails.js":"8","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/EditEmployee.js":"9","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/DetailsEmployee.js":"10","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/Hrpage.js":"11","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/PersonalDetails.js":"12","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/CreatePersonal.js":"13"},{"size":712,"mtime":1611407088059,"results":"14","hashOfConfig":"15"},{"size":8808,"mtime":1611650008258,"results":"16","hashOfConfig":"15"},{"size":84,"mtime":1611407088059,"results":"17","hashOfConfig":"15"},{"size":1912,"mtime":1611407088059,"results":"18","hashOfConfig":"15"},{"size":2968,"mtime":1611486973156,"results":"19","hashOfConfig":"15"},{"size":6817,"mtime":1611813633231,"results":"20","hashOfConfig":"15"},{"size":7219,"mtime":1611742363130,"results":"21","hashOfConfig":"15"},{"size":5370,"mtime":1611407088059,"results":"22","hashOfConfig":"15"},{"size":7346,"mtime":1611744483423,"results":"23","hashOfConfig":"15"},{"size":5379,"mtime":1611457450436,"results":"24","hashOfConfig":"15"},{"size":2735,"mtime":1611573282124,"results":"25","hashOfConfig":"15"},{"size":7642,"mtime":1611813333467,"results":"26","hashOfConfig":"15"},{"size":7808,"mtime":1611739118354,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"aub0qz",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},"/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/index.js",[],["65","66"],"/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/App.js",[],"/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/history.js",[],"/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/LoginPage.js",[],"/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/HomePage.js",["67","68","69","70","71","72","73","74"],"import React, { Component, Fragment } from 'react'\nimport Styled from '@emotion/styled';\n// import ListsofEmployees from \"./ListOfEmployee\";\nimport { Link } from 'react-router-dom';\nimport { useQuery, gql, useMutation } from '@apollo/client';\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './images/mobile_black.png';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\ncolor: ${(props) => props.color};\nposition: sticky;\ntop: 0px;\nfont-size: 20px;\npadding: 8px;\ntext-align:${(props) => props.text};\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom:-5px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 3px solid #ddd;\n`;\nconst TableData = Styled.td`\nborder: 3px solid #ddd;\nheight:30px;\nfont-size:20px;\nfont-weight:bold;\npadding:40px;\nvertical-align:bottom;\ntext-align:left;\n&:hover {background-color: grey;}\n`;\nconst TableRow = Styled.tr`\nborder: 3px solid #ddd;\n &:nth-child(even){background-color: #F2F2F2;}\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\n\n\n \n    window.onpopstate= function()\n    {\n        alert(\"Are you sure want to leave this page\");\n    }\n    \nexport const HomePage = () => {\n\n    // if (window.confirm(\"Do you really want to leave?\")) {\n\n    // if (loading) return <p>Loading ...</p>;\n    // if (error) return <p>Error</p>;\n \n    return (\n        \n        <Fragment>\n            {/* <Navbar bgColor=\"powderblue\" color=\"black\">\n                    <Logo src={require(\"./images/mobile_black.png\") } /> Beeja\n                </Navbar> */}\n            <Navbar bgColor=\"grey\" color=\"white\" text=\"center\">\n                Home page\n                    </Navbar>\n            <Table>\n                <TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to ={\"/hr\"}>\n                         HR\n                         </LinkTag>\n                         </TableData></TableRow>\n                    <TableRow><TableData> ACCOUNTING</TableData></TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to={\"/list\"} >\n                            EMOPLOYEE DIRECTORY\n                             </LinkTag>\n                    </TableData></TableRow>\n                    <TableRow><TableData> CLIENT</TableData></TableRow>\n                    \n                    <TableRow ><TableData>\n                \n                        DOCUMENTATION\n                        </TableData></TableRow>\n                             \n                </TableRow>\n            </Table>\n        </Fragment>\n    )\n}","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/ListOfEmployee.js",["75","76","77","78","79","80","81","82"],"import React, { Component, Fragment, useState, } from 'react';\nimport Styled from '@emotion/styled';\nimport { Link ,useParams,useHistory} from 'react-router-dom';\n//  import history from './../History';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faSearch, faTrash } from '@fortawesome/free-solid-svg-icons'\n// import { from } from 'apollo-boost';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\ntext-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst Actionbutton = Styled.button`\nheight:15px;\nwidth:15px;\ndisplay:inline-block;\nbackground-color:rgba(255,255,255,0.7);\nborder:1px solid gray;\n`;\nconst IdButton = Styled.button`\nborder:none;\noutline:none;\n    `;\n\n\n// const TriangleButton = Styled(Actionbutton)`\n// border-left: 7px solid transparent;\n// border-right:7px solid transparent;\n// border-top: 6px dashed;\n// `;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover =Styled.a`\n&:hover {\n    color:blue;\n`;\n\nexport const ListOfEmployee = () => {\n\n    const { id } = useParams();\n\n    const Show = gql`\n{\n    employeeList{\n    id\n    name\n    code\n    email\n    role\n    department\n    joinedDate\n    mobileNo\n    }\n  }`;\n  const GetEmployeeById = gql`\n  query EmpDetails($id:String!){\n      employee(id:$id){\n          name\n          code\n          email\n          mobileNo\n          department\n          role\n          joinedDate\n      }\n  }\n  `;\n    const [emp,setemp] = useState({ 'idTodisplay': \"\" });\n const history = useHistory();\n  const navigateTo = () => history.push(`/read/${data.employee.id}`);\n\n    const [empId, setEmpId] = useState({ 'idToDelete': \"\" });\n  \n \n\n    const DELETE_Employee = gql`\n    mutation DeleteEmployee($id: String!){\n    deleteEmployee(id: $id){\n    respCode,\n    respMessage \n  }\n}\n`;\n\n\nconst { loading, error, data} = useQuery(Show,GetEmployeeById);\n\n\nconst [deleteMutation] = useMutation(DELETE_Employee);\n   \n    const handleDelete = (deleteId) => {\n        if (window.confirm(\"Do you really want to leave?\")) {\n            setEmpId({ 'idToDelete': deleteId });\n            console.log(\"handleDelte\", deleteId, empId);\n            deleteMutation({ variables: { id: deleteId } });\n        }\n        else {\n\n        }\n    };\n\n    //  const handleInputChange = event => {\n    //     const { value } = event.target\n    //     this.props.userSearchInput(value);\n    //     this.setState({\n    //         query: value\n    //     });\n    // };\n\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n  \n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n                List of Employee\n                \n                \n                <LinkTag to={`/display/${id}`} >\n                    <FontAwesomeIcon   icon={faSearch}  >\n                        \n                    {/* <LinkTag to={`/read/${emId.id}`} >emp.id</LinkTag> */}\n                    </FontAwesomeIcon>\n                    </LinkTag>\n                  {/* <input type=\"text\" placeholder=\"search\" value={data.id}  ></input>\n                   */}\n                  \n                \n\n                 <Button >\n                    <LinkTag to={\"/adding\"}>Add Employee</LinkTag>\n                </Button>\n                \n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n                    <TableRow>\n                        <TableHeading> ID</TableHeading>\n                        <TableHeading>Employee Name</TableHeading>\n                        <TableHeading>EmployeeCode</TableHeading>\n                        <TableHeading>Email</TableHeading>\n                        <TableHeading>Role</TableHeading>\n                        <TableHeading>Department</TableHeading>\n                        <TableHeading>JoiningDate</TableHeading>\n                        <TableHeading>MobileNumber</TableHeading>\n                        <TableHeading>Edit</TableHeading>\n                        <TableHeading>Delete</TableHeading>\n                    </TableRow>\n\n                    {data.employeeList.map((employee, id) => (\n                        <TableRow>\n                            \n                        <LinkTag to={`/display/${employee.id}`}>\n                               \n                                   <TableData key={id}>{employee.id}</TableData>\n                               \n                                </LinkTag>\n                                \n                            \n                            <TableData>{employee.name}</TableData>\n                            <TableData>{employee.code}</TableData>\n                            <TableData>{employee.email}</TableData>\n                            <TableData>{employee.role}</TableData>\n                            <TableData>{employee.department}</TableData>\n                            <TableData>{employee.joinedDate}</TableData>\n                            <TableData>{employee.mobileNo}</TableData>\n\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <LinkTag to={`/edit/${employee.id}`}>\n                                    <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                                </LinkTag>\n                            </TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <Button onClick={() => handleDelete(employee.id)} >\n                                    <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\n                                </Button>\n                            </TableData>\n                        </TableRow>\n                        \n                    )\n                    )}\n                </Table>\n            </Container>\n        </Fragment>\n    )\n}\n","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/CreateEmployee.js",["83","84","85","86"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql } from '@apollo/client';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// import {gql} from 'graphql-tag'\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n       props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const CreateEmployee = () => {\n\n    const [formData, createFormData] = useState({\n        username:\"\",\n        code: \"\",\n        email: \" \",\n        mobileNO: \"\",\n        department: \"\",\n        role: \"\",\n        joinDate: \"\"\n    });\n\n    const EmployeeList = gql`\n     mutation {\n         createEmployee(data: {\n              name:\"${formData.username}\",\n              code:\"${formData.code}\",\n              email:\"${formData.email}\",\n              mobileNo:\"${formData.mobileNO}\",\n              department:\"${formData.department}\",\n              role:\"${formData.role}\",\n             joinedDate:\"${formData.joinDate}\"   \n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [EmployeeCreate, { loading, error, data }] = useMutation(EmployeeList);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    // toast.configure() \n    // const remind = (message)=>{  \n    //     toast.success(message,\n    //     {position: toast.POSITION.BOTTOM_RIGHT})  \n    //   };\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        EmployeeCreate();\n        showToast();\n    };\n\n    toast.configure()\n    const showToast = () => {\n    if (error)  { \n        toast.info('successful');\n    }\n};\n\n    return (\n\n        <Fragment>\n            {/* <Navbar bgColor=\"powderblue\" color=\"black\">\n                        <Logo src={require(\"../images/Logo.png\")}></Logo> Beeja\n                        </Navbar> */}\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Create an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobileNO\" onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"DEVOPS\"> DEVOPS</Option>\n                            <Option value=\"QTEST\"> Q-TEST</Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn><Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinDate\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                                <LinkTag to={\"/list\"}>Submit</LinkTag>\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/EmployeeDetails.js",["87","88","89","90","91","92","93","94","95","96","97"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nimport { ListOfEmployee } from './ListOfEmployee';\nimport { graphql } from 'graphql';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EmployeeDetails = () => {\n\n    const { id } = useParams();\n\n    // const initialFormState = { id: null, username: '' }\n    // const [currentUser, setCurrentUser] = useState(initialFormState)\n\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email: \" \",\n        mobileNo: \"\",\n        department: \"\",\n        role: \"\",\n        joinedDate:\"\"\n    })\n\n    const GetEmployeeById = gql`\n    query EmpDetails($id:String!){\n        employee(id:$id){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const EmployeeEdit = gql`\n     mutation UpdateEmployee($id: String!){\n         updateEmployee(id: $id,data: {\n              name:\"${empState.username}\",\n              code:\"${empState.code}\",\n              email:\"${empState.email}\",\n              mobileNo:\"${empState.mobileNo}\",\n              department:\"${empState.department}\",\n              role:\"${empState.role}\",\n             joinedDate:\"${empState.joinedDate}\"   \n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\n    const { loading, error, data } = useQuery(GetEmployeeById, { variables: { id: id } });\n\n    const [EditMutation,] = useMutation(EmployeeEdit);\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n\n    // if (data) {\n    //     return setCurrentUser({ id: data.employee.id, username: data.employee.name })\n    //     //    currentUser = data.employee\n    // }\n\n\n  \n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Employee Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={data.employee.name} readOnly/></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id </Lable></TableColumn>\n                        <TableColumn>:<Input  value={data.employee.code}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input  value={data.employee.email}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number </Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.mobileNo}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.department} readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.role}  readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.joinedDate} readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                   \n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/EditEmployee.js",["98","99","100","101","102"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\nimport { ListOfEmployee } from './ListOfEmployee';\nimport { graphql } from 'graphql';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const EditEmployee = () => {\n\n    const { id } = useParams();\n\n\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email: \" \",\n        mobileNo: \"\",\n        department: \"\",\n        role: \"\",\n        joinedDate: \"\"\n    })\n\n    const GetEmployeeById = gql`\n    query EmpDetails($id:String!){\n        employee(id:$id){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const EmployeeEdit = gql`\n     mutation UpdateEmployee($id: String!){\n         updateEmployee(id: $id,data: {\n              name:\"${empState.username}\",\n              code:\"${empState.code}\",\n              email:\"${empState.email}\",\n              mobileNo:\"${empState.mobileNo}\",\n              department:\"${empState.department}\",\n              role:\"${empState.role}\",\n             joinedDate:\"${empState.joinedDate}\"   \n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\n    const { loading, error, data } = useQuery(GetEmployeeById, { variables: { id: id } });\n\n    const [EditMutation,] = useMutation(EmployeeEdit);\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n    const handleChange = (e) => {\n        setState({\n            ...empState,\n            [e.target.name]: e.target.value.trim(),\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(empState);\n        EditMutation({ variables: { id: id } });\n\n    };\n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Edit an Employee\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name:</Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" defaultValue={data.employee.name} onChange={handleChange} required /></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" defaultValue={data.employee.code} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" defaultValue={data.employee.email} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number: </Lable></TableColumn>\n                        <TableColumn><Input placeholder=\" +91 \" name=\"mobileNo\" defaultValue={data.employee.mobileNo} onChange={handleChange} type=\"number\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"department\" defaultValue={data.employee.department} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"HR\"> HR </Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"ACCOUNTING\"> ACCOUNTING </Option>\n                            <Option value=\"IT\"> IT </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" defaultValue={data.employee.role} onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"DEVOPS\"> DEVOPS</Option>\n                            <Option value=\"QA-TEST\"> QA-TEST</Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Containerat\" className=\"Selectbox1\"> Join Date: </Lable></TableColumn>\n                        <TableColumn> <Input type=\"date\" placeholder=\"dd-mm-yyyy\" name=\"joinedDate\" defaultValue={data.employee.joinedDate} onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Button type=\"Cancel\">\n                            <LinkTag to={\"/list\"}>Cancel</LinkTag>\n                        </Button></TableColumn>\n\n\n                        <TableColumn><Button onClick={handleSubmit}>\n                            <LinkTag to={\"/list\"}>\n                                Submit\n                        </LinkTag>\n                        </Button></TableColumn>\n\n                    </TableRow>\n\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/DetailsEmployee.js",["103","104","105","106","107","108","109","110","111","112"],"import React, { Component, Fragment, useState } from 'react'\n\nimport Styled from '@emotion/styled';\nimport { Link, useParams } from 'react-router-dom';\nimport { useMutation, gql, useQuery } from '@apollo/client';\n// import { ListOfEmployee } from './ListOfEmployee';\n// import { graphql } from 'graphql';\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder:none;\nwidth:230px;\nmargin-left:5px;\nheight:20px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\n\nexport const DetailsEmployee = () => {\n\n    const { id ,code} = useParams();\n\n    // const initialFormState = { id: null, username: '' }\n    // const [currentUser, setCurrentUser] = useState(initialFormState)\n\n    const [empState, setState] = useState({\n        username: \"\",\n        code: \"\",\n        email: \" \",\n        mobileNo: \"\",\n        department: \"\",\n        role: \"\",\n        joinedDate:\"\"\n    })\n\n    const GetEmployeeById = gql`\n    query EmpDetails($id:String!){\n        employee(id:$id){\n            name\n            code\n            email\n            mobileNo\n            department\n            role\n            joinedDate\n        }\n    }\n    `;\n\n    const EmployeeEdit = gql`\n     mutation UpdateEmployee($id: String!){\n         updateEmployee(id: $id,data: {\n              name:\"${empState.username}\",\n              code:\"${empState.code}\",\n              email:\"${empState.email}\",\n              mobileNo:\"${empState.mobileNo}\",\n              department:\"${empState.department}\",\n              role:\"${empState.role}\",\n             joinedDate:\"${empState.joinedDate}\"   \n           })\n           {\n              respCode, respMessage\n                  }\n              }\n          `;\n    const { loading, error, data } = useQuery(GetEmployeeById, { variables: { id: id } });\n\n    const [EditMutation,] = useMutation(EmployeeEdit);\n    if (loading) return <p>Loading....</p>\n    if (error) return <p>ERROR....</p>\n\n\n    // if (data) {\n    //     return setCurrentUser({ id: data.employee.id, username: data.employee.name })\n    //     //    currentUser = data.employee\n    // }\n\n\n  \n\n    return (\n        <Fragment>\n\n            <Navbar bgColor=\"grey\" color=\"white\">\n                Employee Details\n                        </Navbar>\n            <Break />\n            <Container >\n\n                <Table >\n\n                    <TableRow>\n\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name</Lable></TableColumn>\n                        <TableColumn >:<Input value={data.employee.name} readOnly/></TableColumn>\n\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id </Lable></TableColumn>\n                        <TableColumn>:<Input  value={data.employee.code}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email </Lable></TableColumn>\n                        <TableColumn>:<Input  value={data.employee.email}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Mobile Number\"> Mobile Number </Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.mobileNo}  readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Department\"> Department</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.department} readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.role}  readOnly/>\n                        </TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Date-Container\" className=\"Selectbox1\"> Join Date</Lable></TableColumn>\n                        <TableColumn>:<Input value={data.employee.joinedDate} readOnly/></TableColumn>\n                    </TableRow>\n                    <Break />\n                   \n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/Hrpage.js",["113","114","115","116"],"import React ,{Fragment} from 'react';\nimport Styled from '@emotion/styled';\n\nimport { Link } from 'react-router-dom';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\ncolor: ${(props) => props.color};\nposition: sticky;\ntop: 0px;\nfont-size: 20px;\npadding: 8px;\ntext-align:${(props) => props.text};\n`;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom:-5px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 3px solid #ddd;\n`;\nconst TableData = Styled.td`\nborder: 3px solid #ddd;\nheight:30px;\nfont-size:20px;\nfont-weight:bold;\npadding:40px;\nvertical-align:bottom;\ntext-align:left;\n&:hover {background-color: grey;}\n`;\nconst TableRow = Styled.tr`\nborder: 3px solid #ddd;\n &:nth-child(even){background-color: #F2F2F2;}\n`;\n\n\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n        props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5; \n`;\n// const Ima = Styled.div`\n// // background-image: url(\"https://images.app.goo.gl/KVXryFn1iSCR39TL6\");\n// // border-radius:5px;\n// // background-cover:conatiner;\n// column-count:1;\n// column-gap:150px;\n\n//   `;\n\n\nexport const Hr = () => {\n    return(\n       \n        \n        <Fragment>\n        {/* <Navbar bgColor=\"powderblue\" color=\"black\">\n                <Logo src={require(\"./images/mobile_black.png\") } /> Beeja\n            </Navbar> */}\n        <Navbar bgColor=\"grey\" color=\"white\" text=\"center\">\n            HR\n                </Navbar>\n                <Table>\n                <TableRow>\n                    <TableRow><TableData>\n                        <LinkTag to ={\"/hr\"}>\n                         LEAVE MANGEMENT\n                         </LinkTag>\n                         </TableData></TableRow>\n            \n                    <TableRow><TableData>\n                        <LinkTag to={\"/list\"} >\n                         LEAVE POLICY\n                             </LinkTag>\n                    </TableData></TableRow>\n                    <TableRow><TableData> <LinkTag to={'/personal'} >  PERSONAL DETAILS </LinkTag></TableData></TableRow>\n                    <TableRow ><TableData>\n                \n                        OFFER LETTER INCREMENT\n                        </TableData></TableRow>\n                    \n                    <TableRow ><TableData>\n                \n                        DOCUMENTS\n                        </TableData></TableRow>\n                             \n                </TableRow>\n            </Table>\n    </Fragment>\n    )\n}","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/PersonalDetails.js",["117","118","119","120","121","122","123","124","125","126","127","128","129","130"],"import React, { Component, Fragment, useState, } from 'react';\nimport Styled from '@emotion/styled';\nimport { Link ,useParams,useHistory} from 'react-router-dom';\n//  import history from './../History';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faSearch, faTrash } from '@fortawesome/free-solid-svg-icons'\n// import { from } from 'apollo-boost';\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop: 0px;\npadding: 8px;\ncolor: ${(props) => props.color};\nfont-size: 20px;\n`;\nconst Logo = Styled.img`\nheight: 30px;\nwidth: 30px;\nmargin-bottom: -5px;\n`;\nconst Break = Styled.br`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: powderblue;\nheight:27px;\nmargin-top: -3px;\nfont-size: 13px;\noutline: none;\nborder: none;\nwidth: 100px;\nfloat: right;\nborder-radius: 5px;\n&:hover {\nopacity: 0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding: 8px;\n`;\nconst Table = Styled.table`\nborder-collapse: collapse;\nborder: 1px solid #ddd;\nwidth: 100%;\npadding: 20px;\n`;\nconst TableRow = Styled.tr`\nborder: 1px solid #ddd;\n&:nth-child(even){background-color: #F2F2F2;}\n&:hover {background-color: #ddd;}\n`;\nconst TableData = Styled.td`\nborder: 1px solid #ddd;\nheight: 30px;\nvertical-align: bottom;\ntext-align:left;\n`;\nconst TableHeading = Styled.th`\nborder: 1px solid #ddd;\nheight: 10px;\npadding:8px;\ntext-align:left;\n`;\nconst Actionbutton = Styled.button`\nheight:15px;\nwidth:15px;\ndisplay:inline-block;\nbackground-color:rgba(255,255,255,0.7);\nborder:1px solid gray;\n`;\nconst IdButton = Styled.button`\nborder:none;\noutline:none;\n    `;\n\n\n// const TriangleButton = Styled(Actionbutton)`\n// border-left: 7px solid transparent;\n// border-right:7px solid transparent;\n// border-top: 6px dashed;\n// `;\nconst LinkTag = Styled(Link)`\ncolor:black;\ntext-decoration:none;\n`;\nconst Hover =Styled.a`\n&:hover {\n    color:blue;\n`;\n\nexport const PersonalDetails = () => {\n\n    const { id } = useParams();\n\n    const Show = gql`\n{\n    personalList{\n        id\n        name\n        code\n        email\n        role\n        bank\n        bankaccno\n        PAN\n        ifsccode\n        }\n  }`;\n  const PersonalDetailsById = gql`\n  query PersonalDetails($id:String!){\n      personalinfo(id:$id){\n          name\n          code\n          email\n          role\n          bank\n          bankaccno\n          ifsccode\n          PAN\n      }\n  }`;\nconst [emp,setemp] = useState({ 'idTodisplay': \"\" });\n const history = useHistory();\n  const navigateTo = () => history.push(`/read/${data.employee.id}`);\n\n    const [empId, setEmpId] = useState({ 'idToDelete': \"\" });\n  \n \n\n    const DELETE_Employee = gql`\n    mutation DeleteEmployee($id: String!){\n    deleteEmployee(id: $id){\n    respCode,\n    respMessage \n  }\n}\n`;\n\n\nconst { loading, error, data} = useQuery(Show,PersonalDetailsById);\n\n\nconst [deleteMutation] = useMutation(DELETE_Employee);\n   \n    const handleDelete = (deleteId) => {\n        if (window.confirm(\"Do you really want to leave?\")) {\n            setEmpId({ 'idToDelete': deleteId });\n            console.log(\"handleDelte\", deleteId, empId);\n            deleteMutation({ variables: { id: deleteId } });\n        }\n        else {\n\n        }\n    };\n\n    //  const handleInputChange = event => {\n    //     const { value } = event.target\n    //     this.props.userSearchInput(value);\n    //     this.setState({\n    //         query: value\n    //     });\n    // };\n\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n  \n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n            Personal Details\n                \n                \n                {/* {/* <LinkTag to={`/display/${id}`} >\n                    <FontAwesomeIcon   icon={faSearch}  >\n                        \n                //     {/* <LinkTag to={`/read/${emId.id}`} >emp.id</LinkTag> */}\n                {/* //     </FontAwesomeIcon>\n                //     </LinkTag> */}\n                {/* //   */}\n                \n\n                 <Button >\n                    <LinkTag to={\"/personalData\"}>Add PersonalData</LinkTag>\n                </Button>\n                \n            </Navbar>\n            <Break />\n            <Container>\n                <Table>\n                    <TableRow>\n                    <TableHeading> ID</TableHeading>\n                    <TableHeading>Employee Name</TableHeading>\n                    <TableHeading>code</TableHeading>\n                    <TableHeading>Email</TableHeading>\n                    <TableHeading>Role</TableHeading>\n                    <TableHeading>PAN number</TableHeading>\n                    <TableHeading>Bank </TableHeading>\n                    <TableHeading>Account number</TableHeading>\n                    <TableHeading>IFSC code</TableHeading>\n                  \n                    </TableRow>\n                    {data.personalList.map((personal,id) => (\n                        <TableRow>\n                            <LinkTag  >\n                               <TableData key={id}>{personal.id}</TableData>\n                            \n                            </LinkTag>\n                        <TableData>{personal.name}</TableData>\n                        <TableData>{personal.code}</TableData>\n                        <TableData>{personal.email}</TableData>\n                        <TableData>{personal.role}</TableData>\n                        <TableData>{personal.PAN}</TableData>\n                        <TableData>{personal.bank}</TableData>\n                        <TableData>{personal.bankaccno}</TableData>\n                        <TableData>{personal.bankaccno}</TableData>\n                        \n                        \n\n                        </TableRow>\n                    ))}\n\n                    {/* {data.employeeList.map((employee, id) => (\n                        <TableRow>\n                            \n                        <LinkTag to={`/display/${employee.id}`}>\n                               \n                                   <TableData key={id}>{employee.id}</TableData>\n                               \n                                </LinkTag>\n                                \n                            \n                            <TableData>{employee.name}</TableData>\n                            <TableData>{employee.code}</TableData>\n                            <TableData>{employee.email}</TableData>\n                            <TableData>{employee.role}</TableData>\n                            <TableData>{employee.department}</TableData>\n                            <TableData>{employee.joinedDate}</TableData>\n                            <TableData>{employee.mobileNo}</TableData> \n                            to={`/edit/${employee.id}`}\n                             onClick={() => handleDelete(employee.id)}*/}\n\n                            {/* <TableData style={{ \"text-align\": \"center\" }} >\n                                <LinkTag >\n                                    <FontAwesomeIcon icon={faEdit} ></FontAwesomeIcon>\n                                </LinkTag>\n                            </TableData>\n                            <TableData style={{ \"text-align\": \"center\" }} >\n                                <Button >\n                                    <FontAwesomeIcon icon={faTrash}></FontAwesomeIcon>\n                                </Button>\n                            </TableData>\n                         */}\n                    \n                </Table>\n            </Container>\n        </Fragment>\n    )\n}\n","/home/vivektej/Desktop/Pavan/beejaFront_end/my-beeja/beejafrontend/src/component/CreatePersonal.js",["131","132","133","134","135"],"import React, { Fragment, useState } from 'react'\nimport Styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { useMutation, gql } from '@apollo/client';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// import {gql} from 'graphql-tag'\n\nconst Navbar = Styled.nav`\nbackground-color: ${(props) => props.bgColor};\nposition: sticky;\ntop:0px;\npadding:8px;\ncolor:${(props) => props.color};\nfont-size:25px;\n`;\nconst Logo = Styled.img`\nheight:20px;\nwidth:20px\n`;\nconst Lable = Styled.label`\nfont-size:20px;\n`;\nconst Input = Styled.input`\nborder-radius:5px;\nwidth:230px;\nmargin-left:5px;\nheight:25px;\n`;\nconst Break = Styled.br`\n`;\nconst SelectBox = Styled.select`\n&.Selectbox1{\nwidth: 230px;\nmargin-left:5px;\nborder-radius:5px;\nheight:25px;\n}\n`;\nconst Option = Styled.option`\n`;\nconst Button = Styled.button`\ncolor:black;\nbackground-color: ${props =>\n       props.save ? 'powderblue' : 'white'};\nheight:30px;\nfont-size:20px;\nwidth:80px;\nborder-radius:5px;\n&:hover {\nopacity:0.5;\n`;\nconst Container = Styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\npadding:20px;\n`;\nconst Table = Styled.table`\n`;\nconst TableData = Styled.td`\n`;\nconst TableRow = Styled.tr`\n`;\nconst TableColumn = Styled.td`\n`;\nconst LinkTag = Styled(Link)` \ncolor:black; \ntext-decoration:none;\n`;\n\nexport const CreatePersonal = () => {\n\n    const [formData, createFormData] = useState({\n        username:\"\",\n        code: \"\",\n        email: \" \",\n        bankaccno: \"\",\n        bank: \"\",\n        role: \"\",\n        ifsccode: \"\",\n        PAN: \"\"\n    });\n\n    const PersonalList = gql`\n     mutation {\n         createPersonal(data: {\n              name:\"${formData.username}\",\n              code:\"${formData.code}\",\n              email:\"${formData.email}\",\n              bankaccno:\"${formData.bankaccno}\",\n              bank:\"${formData.bank}\",\n              role:\"${formData.role}\",\n              ifsccode:\"${formData.ifsccode}\" ,\n              PAN:\"${formData.PAN}\"\n\n\n           })\n                  {\n                      respCode, respMessage\n                  }\n              }\n          `;\n    const [PersonalCreate, { loading, error, data }] = useMutation(PersonalList);\n    if (loading) return <p>Loading ...</p>;\n    if (error) return <p>Error</p>;\n\n    toast.configure() \n    const remind = (message)=>{  \n        toast.success(message,\n        {position: toast.POSITION.BOTTOM_RIGHT})  \n      };\n\n    const handleChange = (e) => {\n        createFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        PersonalCreate();\n        showToast();\n    };\n\n    toast.configure()\n    const showToast = () => {\n    if (error)  { \n        toast.info('successful');\n    }\n};\n\n    return (\n\n        <Fragment>\n            <Navbar bgColor=\"grey\" color=\"white\">\n               Create Personal data\n                        </Navbar>\n            <Break />\n            <Container >\n                <Table >\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Name\"> Name: </Lable></TableColumn>\n                        <TableColumn ><Input type=\"text\" name=\"username\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Empl-Id\"> Employee Id: </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\" name=\"code\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Email\"> Email: </Lable></TableColumn>\n                        <TableColumn><Input type=\"email\" name=\"email\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break /> \n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"Role\"> Role: </Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable > Permanent Account Number  </Lable></TableColumn>\n                        <TableColumn><Input name=\"PAN\" onChange={handleChange} type=\"text\" required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn > <Lable htmlFor=\"Bank\"> Bank Name</Lable></TableColumn>\n                        <TableColumn><SelectBox className=\"Selectbox1\" name=\"Bank\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"SBI\">SBI </Option>\n                            <Option value=\"AXIS\"> AXIS </Option>\n                            <Option value=\"ICICI\"> ICICI </Option>\n                            <Option value=\"HDFC\"> HDFC </Option>\n                        </SelectBox></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"\"> ACCOUNT Number </Lable></TableColumn>\n                        <TableColumn><Input name=\"bankaccno\" onChange={handleChange} type=\"text\" required /></TableColumn>\n                        {/* <TableColumn><SelectBox className=\"Selectbox1\" name=\"role\" onChange={handleChange} required>\n                            <Option disabled selected value> Select an Option</Option>\n                            <Option value=\"ADMIN\"> ADMIN </Option>\n                            <Option value=\"SUPER ADMIN\"> SUPER ADMIN </Option>\n                            <Option value=\"ACCOUNTANT\"> ACCOUNTANT </Option>\n                            <Option value=\"SOFTWARE ENGINEER\"> SOFTWARE ENGINEER </Option>\n                            <Option value=\"SENIOR-SOFTWARE ENGINEER\"> SENIOR-SOFTWARE ENGINEER </Option>\n                        </SelectBox></TableColumn> */}\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn ><Lable htmlFor=\"\" > IFSC CODE </Lable></TableColumn>\n                        <TableColumn><Input type=\"text\"  name=\"ifsccode\" onChange={handleChange} required /></TableColumn>\n                    </TableRow>\n                    <Break />\n                    <TableRow>\n                        <TableColumn >\n                            <Button type=\"Cancel\">\n                                <LinkTag to={\"/personal\"}>Cancel</LinkTag>\n                            </Button>\n                        </TableColumn>\n\n                        <TableColumn>\n                            <Button onClick={handleSubmit}>\n                                <LinkTag to={\"/personal\"}>Submit</LinkTag>\n                            </Button>\n                        </TableColumn>\n                    </TableRow>\n                </Table>\n\n            </Container>\n\n        </Fragment>\n    );\n}\n",["136","137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"146","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":18},{"ruleId":"142","severity":1,"message":"147","line":5,"column":20,"nodeType":"144","messageId":"145","endLine":5,"endColumn":23},{"ruleId":"142","severity":1,"message":"148","line":5,"column":25,"nodeType":"144","messageId":"145","endLine":5,"endColumn":36},{"ruleId":"142","severity":1,"message":"149","line":9,"column":10,"nodeType":"144","messageId":"145","endLine":9,"endColumn":24},{"ruleId":"142","severity":1,"message":"150","line":9,"column":26,"nodeType":"144","messageId":"145","endLine":9,"endColumn":31},{"ruleId":"142","severity":1,"message":"151","line":25,"column":7,"nodeType":"144","messageId":"145","endLine":25,"endColumn":11},{"ruleId":"142","severity":1,"message":"152","line":48,"column":7,"nodeType":"144","messageId":"145","endLine":48,"endColumn":13},{"ruleId":"142","severity":1,"message":"143","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"151","line":17,"column":7,"nodeType":"144","messageId":"145","endLine":17,"endColumn":11},{"ruleId":"142","severity":1,"message":"153","line":67,"column":7,"nodeType":"144","messageId":"145","endLine":67,"endColumn":19},{"ruleId":"142","severity":1,"message":"154","line":74,"column":7,"nodeType":"144","messageId":"145","endLine":74,"endColumn":15},{"ruleId":"142","severity":1,"message":"155","line":89,"column":7,"nodeType":"144","messageId":"145","endLine":89,"endColumn":12},{"ruleId":"142","severity":1,"message":"156","line":124,"column":12,"nodeType":"144","messageId":"145","endLine":124,"endColumn":15},{"ruleId":"142","severity":1,"message":"157","line":124,"column":16,"nodeType":"144","messageId":"145","endLine":124,"endColumn":22},{"ruleId":"142","severity":1,"message":"158","line":126,"column":9,"nodeType":"144","messageId":"145","endLine":126,"endColumn":19},{"ruleId":"142","severity":1,"message":"149","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":24},{"ruleId":"142","severity":1,"message":"151","line":18,"column":7,"nodeType":"144","messageId":"145","endLine":18,"endColumn":11},{"ruleId":"142","severity":1,"message":"159","line":62,"column":7,"nodeType":"144","messageId":"145","endLine":62,"endColumn":16},{"ruleId":"142","severity":1,"message":"160","line":101,"column":46,"nodeType":"144","messageId":"145","endLine":101,"endColumn":50},{"ruleId":"142","severity":1,"message":"143","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"161","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":24},{"ruleId":"142","severity":1,"message":"162","line":7,"column":10,"nodeType":"144","messageId":"145","endLine":7,"endColumn":17},{"ruleId":"142","severity":1,"message":"151","line":17,"column":7,"nodeType":"144","messageId":"145","endLine":17,"endColumn":11},{"ruleId":"142","severity":1,"message":"163","line":32,"column":7,"nodeType":"144","messageId":"145","endLine":32,"endColumn":16},{"ruleId":"142","severity":1,"message":"164","line":40,"column":7,"nodeType":"144","messageId":"145","endLine":40,"endColumn":13},{"ruleId":"142","severity":1,"message":"152","line":42,"column":7,"nodeType":"144","messageId":"145","endLine":42,"endColumn":13},{"ruleId":"142","severity":1,"message":"159","line":61,"column":7,"nodeType":"144","messageId":"145","endLine":61,"endColumn":16},{"ruleId":"142","severity":1,"message":"165","line":67,"column":7,"nodeType":"144","messageId":"145","endLine":67,"endColumn":14},{"ruleId":"142","severity":1,"message":"166","line":80,"column":22,"nodeType":"144","messageId":"145","endLine":80,"endColumn":30},{"ruleId":"142","severity":1,"message":"167","line":122,"column":12,"nodeType":"144","messageId":"145","endLine":122,"endColumn":24},{"ruleId":"142","severity":1,"message":"143","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"161","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":24},{"ruleId":"142","severity":1,"message":"162","line":7,"column":10,"nodeType":"144","messageId":"145","endLine":7,"endColumn":17},{"ruleId":"142","severity":1,"message":"151","line":17,"column":7,"nodeType":"144","messageId":"145","endLine":17,"endColumn":11},{"ruleId":"142","severity":1,"message":"159","line":61,"column":7,"nodeType":"144","messageId":"145","endLine":61,"endColumn":16},{"ruleId":"142","severity":1,"message":"143","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"151","line":17,"column":7,"nodeType":"144","messageId":"145","endLine":17,"endColumn":11},{"ruleId":"142","severity":1,"message":"163","line":32,"column":7,"nodeType":"144","messageId":"145","endLine":32,"endColumn":16},{"ruleId":"142","severity":1,"message":"164","line":40,"column":7,"nodeType":"144","messageId":"145","endLine":40,"endColumn":13},{"ruleId":"142","severity":1,"message":"152","line":42,"column":7,"nodeType":"144","messageId":"145","endLine":42,"endColumn":13},{"ruleId":"142","severity":1,"message":"159","line":61,"column":7,"nodeType":"144","messageId":"145","endLine":61,"endColumn":16},{"ruleId":"142","severity":1,"message":"165","line":67,"column":7,"nodeType":"144","messageId":"145","endLine":67,"endColumn":14},{"ruleId":"142","severity":1,"message":"168","line":75,"column":17,"nodeType":"144","messageId":"145","endLine":75,"endColumn":21},{"ruleId":"142","severity":1,"message":"166","line":80,"column":22,"nodeType":"144","messageId":"145","endLine":80,"endColumn":30},{"ruleId":"142","severity":1,"message":"167","line":122,"column":12,"nodeType":"144","messageId":"145","endLine":122,"endColumn":24},{"ruleId":"142","severity":1,"message":"149","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":24},{"ruleId":"142","severity":1,"message":"150","line":6,"column":26,"nodeType":"144","messageId":"145","endLine":6,"endColumn":31},{"ruleId":"142","severity":1,"message":"151","line":23,"column":7,"nodeType":"144","messageId":"145","endLine":23,"endColumn":11},{"ruleId":"142","severity":1,"message":"152","line":48,"column":7,"nodeType":"144","messageId":"145","endLine":48,"endColumn":13},{"ruleId":"142","severity":1,"message":"143","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"169","line":6,"column":10,"nodeType":"144","messageId":"145","endLine":6,"endColumn":25},{"ruleId":"142","severity":1,"message":"170","line":7,"column":10,"nodeType":"144","messageId":"145","endLine":7,"endColumn":16},{"ruleId":"142","severity":1,"message":"171","line":7,"column":18,"nodeType":"144","messageId":"145","endLine":7,"endColumn":26},{"ruleId":"142","severity":1,"message":"172","line":7,"column":28,"nodeType":"144","messageId":"145","endLine":7,"endColumn":35},{"ruleId":"142","severity":1,"message":"151","line":17,"column":7,"nodeType":"144","messageId":"145","endLine":17,"endColumn":11},{"ruleId":"142","severity":1,"message":"153","line":67,"column":7,"nodeType":"144","messageId":"145","endLine":67,"endColumn":19},{"ruleId":"142","severity":1,"message":"154","line":74,"column":7,"nodeType":"144","messageId":"145","endLine":74,"endColumn":15},{"ruleId":"142","severity":1,"message":"155","line":89,"column":7,"nodeType":"144","messageId":"145","endLine":89,"endColumn":12},{"ruleId":"142","severity":1,"message":"173","line":96,"column":13,"nodeType":"144","messageId":"145","endLine":96,"endColumn":15},{"ruleId":"142","severity":1,"message":"156","line":125,"column":8,"nodeType":"144","messageId":"145","endLine":125,"endColumn":11},{"ruleId":"142","severity":1,"message":"157","line":125,"column":12,"nodeType":"144","messageId":"145","endLine":125,"endColumn":18},{"ruleId":"142","severity":1,"message":"158","line":127,"column":9,"nodeType":"144","messageId":"145","endLine":127,"endColumn":19},{"ruleId":"142","severity":1,"message":"174","line":148,"column":11,"nodeType":"144","messageId":"145","endLine":148,"endColumn":23},{"ruleId":"142","severity":1,"message":"149","line":5,"column":10,"nodeType":"144","messageId":"145","endLine":5,"endColumn":24},{"ruleId":"142","severity":1,"message":"151","line":18,"column":7,"nodeType":"144","messageId":"145","endLine":18,"endColumn":11},{"ruleId":"142","severity":1,"message":"159","line":62,"column":7,"nodeType":"144","messageId":"145","endLine":62,"endColumn":16},{"ruleId":"142","severity":1,"message":"160","line":105,"column":46,"nodeType":"144","messageId":"145","endLine":105,"endColumn":50},{"ruleId":"142","severity":1,"message":"175","line":110,"column":11,"nodeType":"144","messageId":"145","endLine":110,"endColumn":17},{"ruleId":"138","replacedBy":"176"},{"ruleId":"140","replacedBy":"177"},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useQuery' is defined but never used.","'gql' is defined but never used.","'useMutation' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'Logo' is assigned a value but never used.","'Button' is assigned a value but never used.","'Actionbutton' is assigned a value but never used.","'IdButton' is assigned a value but never used.","'Hover' is assigned a value but never used.","'emp' is assigned a value but never used.","'setemp' is assigned a value but never used.","'navigateTo' is assigned a value but never used.","'TableData' is assigned a value but never used.","'data' is assigned a value but never used.","'ListOfEmployee' is defined but never used.","'graphql' is defined but never used.","'SelectBox' is assigned a value but never used.","'Option' is assigned a value but never used.","'LinkTag' is assigned a value but never used.","'setState' is assigned a value but never used.","'EditMutation' is assigned a value but never used.","'code' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","'faEdit' is defined but never used.","'faSearch' is defined but never used.","'faTrash' is defined but never used.","'id' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'remind' is assigned a value but never used.",["178"],["179"],"no-global-assign","no-unsafe-negation"]